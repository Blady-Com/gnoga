GNOGA - The GNU Omnificent GUI for Ada
http://www.gnoga.com

Read through each README starting with /tutorial for the basics on writing Gnoga applications.

For now run:

make  (or run "make release" for no debug options)

then run the snake demo in /bin

There are other applicaions in the /bin you can take a look. See /demo and /tutorial

You can now install gnoga as a gnat library using:

sudo make install

Look through the code in the tutorials and the snake demo to get a feel for how things work for now.

see: DEPLOYING_APPS and DEVELOPING_APPS for some tips on Gnoga applications

Gnoga has the following aspects to it:

1. The underlying communication platform between the Ada code and the browser
      Gnoga.Server.Connection

2. Binding the DOM for later higher level development
        Gnoga.Gui.Base (Not per se a binding of Node but takes its place)
        Gnoga.Gui.Element, Gnoga.Gui.Element.* (HTML Elements)
        Gnoga.Gui.Element.Canvas - HTML 5 Canvas bindings
        Gnoga.Gui.Element.SVG - HTML SVG vector graphics - To Do
        Gnoga.Gui.Element.Multimedia - HTML 5 Audio and Video - 70%
        Gnoga.Gui.Element.Style - CSS Style blocks
        Gnoga.Gui.Window, Gnoga.Gui.Navigator, Gnoga.Gui.Screen,
        Gnoga.Gui.Location
        Gnoga.Gui.Document

3. Application startup and services
        Gnoga.Server.Application.Singleton - Desktop apps
        Gnoga.Server.Application.Multi_Connect - Multiuser / Web apps
        

4. Gnoga Specific higher level containers and GUI widgets
        Gnoga.Gui.Views.* - Auto layout of child elements and basis for future
                            custom Gnoga widgets
        Gnoga.Gui.Views.Docker - Dock child views to view sides
        Gnoga.Gui.Views.Card - Stacks of views

5. Gnoga Application level APIs, like Logical access control systems, Security services and monitoring, etc.
       Gnoga.Client.Storage - local persistent and session storage on browser

6. Gnoga database bindings and server side APIs
      Gnoga.Server.Database - support for MySQL and SQLite 3
      Gnoga.Server.Model - Active Data models like in Rails
      Gnoga.Server.Migrations - Rails like database schema migrations
      Gnoga.Serve.Template_Parser - Parse files using PHP and Python files

7. Gnoga development tools
	   Code generation for binding pre-made html5 pages
      Database tools for generating front ends, etc.
	     - I already have a tool for creating delailed Active Data bindings
	     - per tables, that will be added in the near future.
	   IDE for Delphi/VB like development
	   etc.

--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

package body Messages is

   package ZT  renames ZanyBlue.Text;
   package ZTC renames ZanyBlue.Text.Catalogs;

   subtype Z is ZTC.ZBMCompile_Definition;

   Facility_1 : aliased constant Wide_String := ""
      & "xmpl"
      & "";
   Facilities : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Facility_1'Access);

   Key_1 : aliased constant Wide_String := ""
      & "1"
      & "";
   Key_2 : aliased constant Wide_String := ""
      & "11"
      & "";
   Key_3 : aliased constant Wide_String := ""
      & "111"
      & "";
   Key_4 : aliased constant Wide_String := ""
      & "1111"
      & "";
   Key_5 : aliased constant Wide_String := ""
      & "11111"
      & "";
   Key_6 : aliased constant Wide_String := ""
      & "111111"
      & "";
   Key_7 : aliased constant Wide_String := ""
      & "1111111"
      & "";
   Key_8 : aliased constant Wide_String := ""
      & "11111111"
      & "";
   Key_9 : aliased constant Wide_String := ""
      & "111111111"
      & "";
   Key_10 : aliased constant Wide_String := ""
      & "1111111111"
      & "";
   Key_11 : aliased constant Wide_String := ""
      & "11111111111"
      & "";
   Key_12 : aliased constant Wide_String := ""
      & "111111111111"
      & "";
   Keys : constant ZT.Constant_String_List (1 .. 12) := (
                   Key_1'Access,
                   Key_2'Access,
                   Key_3'Access,
                   Key_4'Access,
                   Key_5'Access,
                   Key_6'Access,
                   Key_7'Access,
                   Key_8'Access,
                   Key_9'Access,
                   Key_10'Access,
                   Key_11'Access,
                   Key_12'Access);

   Locale_1 : aliased constant Wide_String := ""
      & "";
   Locales : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Locale_1'Access);

   Pool_Data_1 : aliased constant Wide_String := ""
      & "This is message 1This is message 11This is message 111This "
      & "is message 1111This is message 11111This is message 111111T"
      & "his is message 1111111This is message 11111111This is messa"
      & "ge 111111111This is message 1111111111This is message 11111"
      & "111111This is message 111111111111"
      & "";
   Pool : constant ZT.Static_Message_Pool_Type := Pool_Data_1'Access;

   Messages : constant ZTC.ZBMCompile_List (1 .. 12) := (
                 Z'(First => 216, Last => 242,
                    Facility_Index => 1, Key_Index => 11,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 11111111111
                 Z'(First => 190, Last => 215,
                    Facility_Index => 1, Key_Index => 10,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 1111111111
                 Z'(First => 165, Last => 189,
                    Facility_Index => 1, Key_Index => 9,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 111111111
                 Z'(First => 141, Last => 164,
                    Facility_Index => 1, Key_Index => 8,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 11111111
                 Z'(First => 36, Last => 54,
                    Facility_Index => 1, Key_Index => 3,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 111
                 Z'(First => 18, Last => 35,
                    Facility_Index => 1, Key_Index => 2,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 11
                 Z'(First => 243, Last => 270,
                    Facility_Index => 1, Key_Index => 12,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 111111111111
                 Z'(First => 1, Last => 17,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 1
                 Z'(First => 118, Last => 140,
                    Facility_Index => 1, Key_Index => 7,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 1111111
                 Z'(First => 96, Last => 117,
                    Facility_Index => 1, Key_Index => 6,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 111111
                 Z'(First => 75, Last => 95,
                    Facility_Index => 1, Key_Index => 5,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is message 11111
                 Z'(First => 55, Last => 74,
                    Facility_Index => 1, Key_Index => 4,
                    Locale_Index => 1, Source_Locale_Index => 1));
   --  ↦This is message 1111

   ---------------
   --- Facility --
   ---------------

   function Facility (Index : Positive) return Wide_String is
   begin
      return Facilities (Index).all;
   end Facility;

   ---------------------
   --- Facility_Count --
   ---------------------

   function Facility_Count return Natural is
   begin
      return Facilities'Length;
   end Facility_Count;

   ----------------
   -- Initialize --
   ----------------

   procedure Initialize (Catalog : ZTC.Catalog_Type := Standard_Catalog) is
   begin
      ZTC.Initialize (Catalog, Messages, Pool, Facilities, Keys, Locales,
                      "Messages",
                      Pool_Data_1'Length, 270);
   end Initialize;

   ----------
   --- Key --
   ----------

   function Key (Index : Positive) return Wide_String is
   begin
      return Keys (Index).all;
   end Key;

   ----------------
   --- Key_Count --
   ----------------

   function Key_Count return Natural is
   begin
      return Keys'Length;
   end Key_Count;

end Messages;

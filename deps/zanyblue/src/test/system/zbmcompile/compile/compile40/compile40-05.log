--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.* - .*
--  This is a generated file and should not be edited.
--

with ZanyBlue.Text.Arguments;
with ZanyBlue.Text.Formatting;

package body My_Package.App_Strings is

   use ZanyBlue.Text.Arguments;
   use ZanyBlue.Text.Formatting;

   -----------------
   -- Format_msg0 --
   -----------------

   function Format_msg0 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (1),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg0;

   -----------------
   -- Format_msg1 --
   -----------------

   function Format_msg1 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (2),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg1;

   ------------------
   -- Format_msg10 --
   ------------------

   function Format_msg10 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (11),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg10;

   ------------------
   -- Format_msg11 --
   ------------------

   function Format_msg11 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (12),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg11;

   ------------------
   -- Format_msg12 --
   ------------------

   function Format_msg12 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (13),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg12;

   ------------------
   -- Format_msg13 --
   ------------------

   function Format_msg13 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (14),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg13;

   ------------------
   -- Format_msg14 --
   ------------------

   function Format_msg14 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (15),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg14;

   ------------------
   -- Format_msg15 --
   ------------------

   function Format_msg15 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (16),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg15;

   ------------------
   -- Format_msg16 --
   ------------------

   function Format_msg16 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (17),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg16;

   ------------------
   -- Format_msg17 --
   ------------------

   function Format_msg17 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (18),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg17;

   ------------------
   -- Format_msg18 --
   ------------------

   function Format_msg18 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (19),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg18;

   ------------------
   -- Format_msg19 --
   ------------------

   function Format_msg19 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (20),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg19;

   -----------------
   -- Format_msg2 --
   -----------------

   function Format_msg2 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (3),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg2;

   ------------------
   -- Format_msg20 --
   ------------------

   function Format_msg20 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (21),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg20;

   ------------------
   -- Format_msg21 --
   ------------------

   function Format_msg21 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (22),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg21;

   ------------------
   -- Format_msg22 --
   ------------------

   function Format_msg22 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (23),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg22;

   ------------------
   -- Format_msg23 --
   ------------------

   function Format_msg23 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (24),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg23;

   ------------------
   -- Format_msg24 --
   ------------------

   function Format_msg24 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (25),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg24;

   ------------------
   -- Format_msg25 --
   ------------------

   function Format_msg25 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (26),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg25;

   ------------------
   -- Format_msg26 --
   ------------------

   function Format_msg26 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (27),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg26;

   ------------------
   -- Format_msg27 --
   ------------------

   function Format_msg27 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (28),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg27;

   ------------------
   -- Format_msg28 --
   ------------------

   function Format_msg28 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (29),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg28;

   ------------------
   -- Format_msg29 --
   ------------------

   function Format_msg29 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (30),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg29;

   -----------------
   -- Format_msg3 --
   -----------------

   function Format_msg3 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (4),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg3;

   ------------------
   -- Format_msg30 --
   ------------------

   function Format_msg30 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (31),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg30;

   ------------------
   -- Format_msg31 --
   ------------------

   function Format_msg31 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (32),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg31;

   -----------------
   -- Format_msg4 --
   -----------------

   function Format_msg4 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (5),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg4;

   -----------------
   -- Format_msg5 --
   -----------------

   function Format_msg5 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (6),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg5;

   -----------------
   -- Format_msg6 --
   -----------------

   function Format_msg6 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (7),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg6;

   -----------------
   -- Format_msg7 --
   -----------------

   function Format_msg7 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (8),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg7;

   -----------------
   -- Format_msg8 --
   -----------------

   function Format_msg8 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (9),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg8;

   -----------------
   -- Format_msg9 --
   -----------------

   function Format_msg9 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (10),
                     Empty_Argument_List, Locale, Catalog);
   end Format_msg9;

end My_Package.App_Strings;

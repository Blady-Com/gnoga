--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

package body GPS_Text is

   package ZT  renames ZanyBlue.Text;
   package ZTC renames ZanyBlue.Text.Catalogs;

   subtype Z is ZTC.ZBMCompile_Definition;

   Facility_1 : aliased constant Wide_String := ""
      & "Aunit"
      & "";
   Facilities : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Facility_1'Access);

   Key_1 : aliased constant Wide_String := ""
      & "00001"
      & "";
   Key_2 : aliased constant Wide_String := ""
      & "00002"
      & "";
   Key_3 : aliased constant Wide_String := ""
      & "00003"
      & "";
   Key_4 : aliased constant Wide_String := ""
      & "00004"
      & "";
   Key_5 : aliased constant Wide_String := ""
      & "00005"
      & "";
   Key_6 : aliased constant Wide_String := ""
      & "00006"
      & "";
   Key_7 : aliased constant Wide_String := ""
      & "00007"
      & "";
   Key_8 : aliased constant Wide_String := ""
      & "00008"
      & "";
   Key_9 : aliased constant Wide_String := ""
      & "00009"
      & "";
   Key_10 : aliased constant Wide_String := ""
      & "00010"
      & "";
   Key_11 : aliased constant Wide_String := ""
      & "00011"
      & "";
   Key_12 : aliased constant Wide_String := ""
      & "00012"
      & "";
   Key_13 : aliased constant Wide_String := ""
      & "00013"
      & "";
   Key_14 : aliased constant Wide_String := ""
      & "00014"
      & "";
   Key_15 : aliased constant Wide_String := ""
      & "00015"
      & "";
   Key_16 : aliased constant Wide_String := ""
      & "00016"
      & "";
   Key_17 : aliased constant Wide_String := ""
      & "00017"
      & "";
   Key_18 : aliased constant Wide_String := ""
      & "00018"
      & "";
   Key_19 : aliased constant Wide_String := ""
      & "00019"
      & "";
   Key_20 : aliased constant Wide_String := ""
      & "00020"
      & "";
   Key_21 : aliased constant Wide_String := ""
      & "00021"
      & "";
   Key_22 : aliased constant Wide_String := ""
      & "00022"
      & "";
   Key_23 : aliased constant Wide_String := ""
      & "00023"
      & "";
   Key_24 : aliased constant Wide_String := ""
      & "00024"
      & "";
   Key_25 : aliased constant Wide_String := ""
      & "00025"
      & "";
   Key_26 : aliased constant Wide_String := ""
      & "00026"
      & "";
   Key_27 : aliased constant Wide_String := ""
      & "00027"
      & "";
   Key_28 : aliased constant Wide_String := ""
      & "00028"
      & "";
   Key_29 : aliased constant Wide_String := ""
      & "00029"
      & "";
   Key_30 : aliased constant Wide_String := ""
      & "00030"
      & "";
   Key_31 : aliased constant Wide_String := ""
      & "00031"
      & "";
   Key_32 : aliased constant Wide_String := ""
      & "00032"
      & "";
   Key_33 : aliased constant Wide_String := ""
      & "00033"
      & "";
   Key_34 : aliased constant Wide_String := ""
      & "00034"
      & "";
   Key_35 : aliased constant Wide_String := ""
      & "00035"
      & "";
   Key_36 : aliased constant Wide_String := ""
      & "00036"
      & "";
   Key_37 : aliased constant Wide_String := ""
      & "00037"
      & "";
   Key_38 : aliased constant Wide_String := ""
      & "00038"
      & "";
   Key_39 : aliased constant Wide_String := ""
      & "00039"
      & "";
   Key_40 : aliased constant Wide_String := ""
      & "00040"
      & "";
   Key_41 : aliased constant Wide_String := ""
      & "00041"
      & "";
   Key_42 : aliased constant Wide_String := ""
      & "00042"
      & "";
   Key_43 : aliased constant Wide_String := ""
      & "00043"
      & "";
   Keys : constant ZT.Constant_String_List (1 .. 43) := (
                   Key_1'Access,
                   Key_2'Access,
                   Key_3'Access,
                   Key_4'Access,
                   Key_5'Access,
                   Key_6'Access,
                   Key_7'Access,
                   Key_8'Access,
                   Key_9'Access,
                   Key_10'Access,
                   Key_11'Access,
                   Key_12'Access,
                   Key_13'Access,
                   Key_14'Access,
                   Key_15'Access,
                   Key_16'Access,
                   Key_17'Access,
                   Key_18'Access,
                   Key_19'Access,
                   Key_20'Access,
                   Key_21'Access,
                   Key_22'Access,
                   Key_23'Access,
                   Key_24'Access,
                   Key_25'Access,
                   Key_26'Access,
                   Key_27'Access,
                   Key_28'Access,
                   Key_29'Access,
                   Key_30'Access,
                   Key_31'Access,
                   Key_32'Access,
                   Key_33'Access,
                   Key_34'Access,
                   Key_35'Access,
                   Key_36'Access,
                   Key_37'Access,
                   Key_38'Access,
                   Key_39'Access,
                   Key_40'Access,
                   Key_41'Access,
                   Key_42'Access,
                   Key_43'Access);

   Locale_1 : aliased constant Wide_String := ""
      & "";
   Locales : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Locale_1'Access);

   Pool_Data_1 : aliased constant Wide_String := ""
      & "EditUnit TestingAliasesNew Test _Case..._Add Routine...New "
      & "Test _Suite...New Test _Harness...Make new harnessSave in: "
      & "Procedure name:Suite file:Browse...Invalid or non existing "
      & "directory selectedMissing the harness namePlease select a t"
      & "est suite fileReady to create ""{0}"" with test suite ""{1}"
      & """ from package ""{2}""All filesAda filesSuite filesSelect "
      & "test harnessThe file {0} does not contain a test suite.Make"
      & " new suiteSuite name:New_SuiteThe following tests will be a"
      & "dded to the new suite:Create AUnit1.x test suiteMissing tes"
      & "t suite nameReady to create new test suite {0}""Suite and t"
      & "est filesMake new test caseUnit name: Description: New_Test"
      & "(no description)Override Tear_DownOverride Set_upCreate AUn"
      & "it1.x test caseMissing test case nameMissing test case desc"
      & "riptionReady to create new test case {0}"
      & "";
   Pool : constant ZT.Static_Message_Pool_Type := Pool_Data_1'Access;

   Messages : constant ZTC.ZBMCompile_List (1 .. 43) := (
                 Z'(First => 593, Last => 610,
                    Facility_Index => 1, Key_Index => 33,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Make new test case
                 Z'(First => 573, Last => 592,
                    Facility_Index => 1, Key_Index => 32,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Suite and test files
                 Z'(First => 418, Last => 428,
                    Facility_Index => 1, Key_Index => 25,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Suite name:
                 Z'(First => 404, Last => 417,
                    Facility_Index => 1, Key_Index => 24,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Make new suite
                 Z'(First => 768, Last => 800,
                    Facility_Index => 1, Key_Index => 43,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Ready to create new test case {0}
                 Z'(First => 739, Last => 767,
                    Facility_Index => 1, Key_Index => 42,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Missing test case description
                 Z'(First => 134, Last => 144,
                    Facility_Index => 1, Key_Index => 11,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Suite file:
                 Z'(First => 119, Last => 133,
                    Facility_Index => 1, Key_Index => 10,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Procedure name:
                 Z'(First => 677, Last => 691,
                    Facility_Index => 1, Key_Index => 39,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Override Set_up
                 Z'(First => 659, Last => 676,
                    Facility_Index => 1, Key_Index => 38,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Override Tear_Down
                 Z'(First => 538, Last => 572,
                    Facility_Index => 1, Key_Index => 31,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Ready to create new test suite {0}"
                 Z'(First => 515, Last => 526,
                    Facility_Index => 1, Key_Index => 30,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Missing test
                 Z'(First => 717, Last => 738,
                    Facility_Index => 1, Key_Index => 41,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Missing test case name
                 Z'(First => 692, Last => 716,
                    Facility_Index => 1, Key_Index => 40,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Create AUnit1.x test case
                 Z'(First => 110, Last => 118,
                    Facility_Index => 1, Key_Index => 9,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Save in:
                 Z'(First => 94, Last => 109,
                    Facility_Index => 1, Key_Index => 8,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Make new harness
                 Z'(First => 643, Last => 658,
                    Facility_Index => 1, Key_Index => 37,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦(no description)
                 Z'(First => 515, Last => 537,
                    Facility_Index => 1, Key_Index => 29,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Missing test suite name
                 Z'(First => 489, Last => 514,
                    Facility_Index => 1, Key_Index => 28,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Create AUnit1.x test suite
                 Z'(First => 154, Last => 195,
                    Facility_Index => 1, Key_Index => 15,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Invalid or non existing directory selected
                 Z'(First => 154, Last => 153,
                    Facility_Index => 1, Key_Index => 14,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --
                 Z'(First => 220, Last => 250,
                    Facility_Index => 1, Key_Index => 17,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Please select a test suite file
                 Z'(First => 196, Last => 219,
                    Facility_Index => 1, Key_Index => 16,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Missing the harness name
                 Z'(First => 17, Last => 23,
                    Facility_Index => 1, Key_Index => 3,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Aliases
                 Z'(First => 5, Last => 16,
                    Facility_Index => 1, Key_Index => 2,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Unit Testing
                 Z'(First => 84, Last => 90,
                    Facility_Index => 1, Key_Index => 13,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Harness
                 Z'(First => 145, Last => 153,
                    Facility_Index => 1, Key_Index => 12,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Browse...
                 Z'(First => 361, Last => 403,
                    Facility_Index => 1, Key_Index => 23,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The file {0} does not contain a test suite.
                 Z'(First => 342, Last => 360,
                    Facility_Index => 1, Key_Index => 22,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Select test harness
                 Z'(First => 1, Last => 4,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Edit
                 Z'(First => 313, Last => 321,
                    Facility_Index => 1, Key_Index => 19,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦All files
                 Z'(First => 251, Last => 312,
                    Facility_Index => 1, Key_Index => 18,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Ready to create "{0}" with test suite "{1}" from packag⤶
   --  ↦e "{2}"
                 Z'(First => 331, Last => 341,
                    Facility_Index => 1, Key_Index => 21,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Suite files
                 Z'(First => 322, Last => 330,
                    Facility_Index => 1, Key_Index => 20,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Ada files
                 Z'(First => 74, Last => 93,
                    Facility_Index => 1, Key_Index => 7,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦New Test _Harness...
                 Z'(First => 56, Last => 73,
                    Facility_Index => 1, Key_Index => 6,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦New Test _Suite...
                 Z'(First => 622, Last => 634,
                    Facility_Index => 1, Key_Index => 35,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Description:
                 Z'(First => 611, Last => 621,
                    Facility_Index => 1, Key_Index => 34,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Unit name:
                 Z'(First => 438, Last => 488,
                    Facility_Index => 1, Key_Index => 27,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The following tests will be added to the new suite:
                 Z'(First => 429, Last => 437,
                    Facility_Index => 1, Key_Index => 26,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦New_Suite
                 Z'(First => 635, Last => 642,
                    Facility_Index => 1, Key_Index => 36,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦New_Test
                 Z'(First => 41, Last => 55,
                    Facility_Index => 1, Key_Index => 5,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦_Add Routine...
                 Z'(First => 24, Last => 40,
                    Facility_Index => 1, Key_Index => 4,
                    Locale_Index => 1, Source_Locale_Index => 1));
   --  ↦New Test _Case...

   ---------------
   --- Facility --
   ---------------

   function Facility (Index : Positive) return Wide_String is
   begin
      return Facilities (Index).all;
   end Facility;

   ---------------------
   --- Facility_Count --
   ---------------------

   function Facility_Count return Natural is
   begin
      return Facilities'Length;
   end Facility_Count;

   ----------------
   -- Initialize --
   ----------------

   procedure Initialize (Catalog : ZTC.Catalog_Type := Standard_Catalog) is
   begin
      ZTC.Initialize (Catalog, Messages, Pool, Facilities, Keys, Locales,
                      "GPS_Text",
                      Pool_Data_1'Length, 800);
   end Initialize;

   ----------
   --- Key --
   ----------

   function Key (Index : Positive) return Wide_String is
   begin
      return Keys (Index).all;
   end Key;

   ----------------
   --- Key_Count --
   ----------------

   function Key_Count return Natural is
   begin
      return Keys'Length;
   end Key_Count;

end GPS_Text;

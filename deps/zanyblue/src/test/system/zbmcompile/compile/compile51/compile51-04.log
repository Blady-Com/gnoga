--  -*- coding: utf-8 -*-
--
--  Ada specification generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

with Ada.Exceptions;
with ZanyBlue.Text.Catalogs;
with ZanyBlue.Text.Locales;
with ZanyBlue.Text.Arguments;

package GPS_Text.Aunit_Exceptions is

   use ZanyBlue.Text.Catalogs;
   use ZanyBlue.Text.Locales;
   use ZanyBlue.Text.Arguments;

   procedure Raise_00001
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00001);
   --  ↦Edit

   procedure Raise_00002
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00002);
   --  ↦Unit Testing

   procedure Raise_00003
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00003);
   --  ↦Aliases

   procedure Raise_00004
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00004);
   --  ↦New Test _Case...

   procedure Raise_00005
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00005);
   --  ↦_Add Routine...

   procedure Raise_00006
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00006);
   --  ↦New Test _Suite...

   procedure Raise_00007
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00007);
   --  ↦New Test _Harness...

   procedure Raise_00008
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00008);
   --  ↦Make new harness

   procedure Raise_00009
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00009);
   --  ↦Save in:

   procedure Raise_00010
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00010);
   --  ↦Procedure name:

   procedure Raise_00011
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00011);
   --  ↦Suite file:

   procedure Raise_00012
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00012);
   --  ↦Browse...

   procedure Raise_00013
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00013);
   --  ↦Harness

   procedure Raise_00014
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00014);
   --

   procedure Raise_00015
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00015);
   --  ↦Invalid or non existing directory selected

   procedure Raise_00016
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00016);
   --  ↦Missing the harness name

   procedure Raise_00017
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00017);
   --  ↦Please select a test suite file

   procedure Raise_00018
     (E           : Ada.Exceptions.Exception_Id;
      Argument0   : Any_Category_Type'Class;
      Argument1   : Any_Category_Type'Class;
      Argument2   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00018);
   --  ↦Ready to create "{0}" with test suite "{1}" from packag⤶
   --  ↦e "{2}"

   procedure Raise_00019
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00019);
   --  ↦All files

   procedure Raise_00020
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00020);
   --  ↦Ada files

   procedure Raise_00021
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00021);
   --  ↦Suite files

   procedure Raise_00022
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00022);
   --  ↦Select test harness

   procedure Raise_00023
     (E           : Ada.Exceptions.Exception_Id;
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00023);
   --  ↦The file {0} does not contain a test suite.

   procedure Raise_00024
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00024);
   --  ↦Make new suite

   procedure Raise_00025
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00025);
   --  ↦Suite name:

   procedure Raise_00026
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00026);
   --  ↦New_Suite

   procedure Raise_00027
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00027);
   --  ↦The following tests will be added to the new suite:

   procedure Raise_00028
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00028);
   --  ↦Create AUnit1.x test suite

   procedure Raise_00029
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00029);
   --  ↦Missing test suite name

   procedure Raise_00030
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00030);
   --  ↦Missing test

   procedure Raise_00031
     (E           : Ada.Exceptions.Exception_Id;
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00031);
   --  ↦Ready to create new test suite {0}"

   procedure Raise_00032
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00032);
   --  ↦Suite and test files

   procedure Raise_00033
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00033);
   --  ↦Make new test case

   procedure Raise_00034
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00034);
   --  ↦Unit name:

   procedure Raise_00035
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00035);
   --  ↦Description:

   procedure Raise_00036
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00036);
   --  ↦New_Test

   procedure Raise_00037
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00037);
   --  ↦(no description)

   procedure Raise_00038
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00038);
   --  ↦Override Tear_Down

   procedure Raise_00039
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00039);
   --  ↦Override Set_up

   procedure Raise_00040
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00040);
   --  ↦Create AUnit1.x test case

   procedure Raise_00041
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00041);
   --  ↦Missing test case name

   procedure Raise_00042
     (E           : Ada.Exceptions.Exception_Id;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00042);
   --  ↦Missing test case description

   procedure Raise_00043
     (E           : Ada.Exceptions.Exception_Id;
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog);
   pragma No_Return (Raise_00043);
   --  ↦Ready to create new test case {0}

end GPS_Text.Aunit_Exceptions;

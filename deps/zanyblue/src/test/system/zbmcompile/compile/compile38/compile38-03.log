--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

package body My_Package is

   package ZT  renames ZanyBlue.Text;
   package ZTC renames ZanyBlue.Text.Catalogs;

   subtype Z is ZTC.ZBMCompile_Definition;

   Facility_1 : aliased constant Wide_String := ""
      & "App1"
      & "";
   Facility_2 : aliased constant Wide_String := ""
      & "App2"
      & "";
   Facilities : constant ZT.Constant_String_List (1 .. 2) := (
                   Facility_1'Access,
                   Facility_2'Access);

   Key_1 : aliased constant Wide_String := ""
      & "msg1"
      & "";
   Keys : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Key_1'Access);

   Locale_1 : aliased constant Wide_String := ""
      & "";
   Locale_2 : aliased constant Wide_String := ""
      & "de"
      & "";
   Locale_3 : aliased constant Wide_String := ""
      & "fr"
      & "";
   Locale_4 : aliased constant Wide_String := ""
      & "ja"
      & "";
   Locale_5 : aliased constant Wide_String := ""
      & "ko"
      & "";
   Locales : constant ZT.Constant_String_List (1 .. 5) := (
                   Locale_1'Access,
                   Locale_2'Access,
                   Locale_3'Access,
                   Locale_4'Access,
                   Locale_5'Access);

   Pool_Data_1 : aliased constant Wide_String := ""
      & "This is App1de: This is App1fr: This is App1ja: This is App"
      & "1ko: This is App1"
      & "";
   Pool : constant ZT.Static_Message_Pool_Type := Pool_Data_1'Access;

   Messages : constant ZTC.ZBMCompile_List (1 .. 5) := (
                 Z'(First => 45, Last => 60,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 4, Source_Locale_Index => 4),
   --  ↦ja: This is App1
                 Z'(First => 61, Last => 76,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 5, Source_Locale_Index => 5),
   --  ↦ko: This is App1
                 Z'(First => 13, Last => 28,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 2, Source_Locale_Index => 2),
   --  ↦de: This is App1
                 Z'(First => 29, Last => 44,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 3, Source_Locale_Index => 3),
   --  ↦fr: This is App1
                 Z'(First => 1, Last => 12,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 1, Source_Locale_Index => 1));
   --  ↦This is App1

   ---------------
   --- Facility --
   ---------------

   function Facility (Index : Positive) return Wide_String is
   begin
      return Facilities (Index).all;
   end Facility;

   ---------------------
   --- Facility_Count --
   ---------------------

   function Facility_Count return Natural is
   begin
      return Facilities'Length;
   end Facility_Count;

   ----------------
   -- Initialize --
   ----------------

   procedure Initialize (Catalog : ZTC.Catalog_Type := Standard_Catalog) is
   begin
      ZTC.Initialize (Catalog, Messages, Pool, Facilities, Keys, Locales,
                      "My_Package",
                      Pool_Data_1'Length, 76);
   end Initialize;

   ----------
   --- Key --
   ----------

   function Key (Index : Positive) return Wide_String is
   begin
      return Keys (Index).all;
   end Key;

   ----------------
   --- Key_Count --
   ----------------

   function Key_Count return Natural is
   begin
      return Keys'Length;
   end Key_Count;

end My_Package;

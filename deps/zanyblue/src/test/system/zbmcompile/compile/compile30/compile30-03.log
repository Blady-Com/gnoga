--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

package body Xmpl is

   package ZT  renames ZanyBlue.Text;
   package ZTC renames ZanyBlue.Text.Catalogs;

   subtype Z is ZTC.ZBMCompile_Definition;

   Facility_1 : aliased constant Wide_String := ""
      & "xmpl"
      & "";
   Facilities : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Facility_1'Access);

   Key_1 : aliased constant Wide_String := ""
      & "0001"
      & "";
   Key_2 : aliased constant Wide_String := ""
      & "0002"
      & "";
   Key_3 : aliased constant Wide_String := ""
      & "0003"
      & "";
   Key_4 : aliased constant Wide_String := ""
      & "0004"
      & "";
   Key_5 : aliased constant Wide_String := ""
      & "0005"
      & "";
   Key_6 : aliased constant Wide_String := ""
      & "0006"
      & "";
   Key_7 : aliased constant Wide_String := ""
      & "0007"
      & "";
   Key_8 : aliased constant Wide_String := ""
      & "0008"
      & "";
   Key_9 : aliased constant Wide_String := ""
      & "0009"
      & "";
   Key_10 : aliased constant Wide_String := ""
      & "0010"
      & "";
   Key_11 : aliased constant Wide_String := ""
      & "0011"
      & "";
   Key_12 : aliased constant Wide_String := ""
      & "0012"
      & "";
   Key_13 : aliased constant Wide_String := ""
      & "0013"
      & "";
   Key_14 : aliased constant Wide_String := ""
      & "0014"
      & "";
   Key_15 : aliased constant Wide_String := ""
      & "0015"
      & "";
   Key_16 : aliased constant Wide_String := ""
      & "0016"
      & "";
   Key_17 : aliased constant Wide_String := ""
      & "0017"
      & "";
   Key_18 : aliased constant Wide_String := ""
      & "0018"
      & "";
   Key_19 : aliased constant Wide_String := ""
      & "0019"
      & "";
   Key_20 : aliased constant Wide_String := ""
      & "0020"
      & "";
   Key_21 : aliased constant Wide_String := ""
      & "0021"
      & "";
   Key_22 : aliased constant Wide_String := ""
      & "0022"
      & "";
   Key_23 : aliased constant Wide_String := ""
      & "0023"
      & "";
   Key_24 : aliased constant Wide_String := ""
      & "0024"
      & "";
   Key_25 : aliased constant Wide_String := ""
      & "0025"
      & "";
   Key_26 : aliased constant Wide_String := ""
      & "0026"
      & "";
   Keys : constant ZT.Constant_String_List (1 .. 26) := (
                   Key_1'Access,
                   Key_2'Access,
                   Key_3'Access,
                   Key_4'Access,
                   Key_5'Access,
                   Key_6'Access,
                   Key_7'Access,
                   Key_8'Access,
                   Key_9'Access,
                   Key_10'Access,
                   Key_11'Access,
                   Key_12'Access,
                   Key_13'Access,
                   Key_14'Access,
                   Key_15'Access,
                   Key_16'Access,
                   Key_17'Access,
                   Key_18'Access,
                   Key_19'Access,
                   Key_20'Access,
                   Key_21'Access,
                   Key_22'Access,
                   Key_23'Access,
                   Key_24'Access,
                   Key_25'Access,
                   Key_26'Access);

   Locale_1 : aliased constant Wide_String := ""
      & "";
   Locales : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Locale_1'Access);

   Pool_Data_1 : aliased constant Wide_String := ""
      & "aababcabcdabcdeabcdefabcdefgabcdefghabcdefghiabcdefghijabcd"
      & "efghijkabcdefghijklabcdefghijklmabcdefghijklmnabcdefghijklm"
      & "noabcdefghijklmnopabcdefghijklmnopqabcdefghijklmnopqrabcdef"
      & "ghijklmnopqrsabcdefghijklmnopqrstabcdefghijklmnopqrstuabcde"
      & "fghijklmnopqrstuvabcdefghijklmnopqrstuvwabcdefghijklmnopqrs"
      & "tuvwxabcdefghijklmnopqrstuvwxyabcdefghijklmnopqrstuvwxyz"
      & "";
   Pool : constant ZT.Static_Message_Pool_Type := Pool_Data_1'Access;

   Messages : constant ZTC.ZBMCompile_List (1 .. 26) := (
                 Z'(First => 301, Last => 325,
                    Facility_Index => 1, Key_Index => 25,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrstuvwxy
                 Z'(First => 277, Last => 300,
                    Facility_Index => 1, Key_Index => 24,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrstuvwx
                 Z'(First => 56, Last => 66,
                    Facility_Index => 1, Key_Index => 11,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijk
                 Z'(First => 46, Last => 55,
                    Facility_Index => 1, Key_Index => 10,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghij
                 Z'(First => 37, Last => 45,
                    Facility_Index => 1, Key_Index => 9,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghi
                 Z'(First => 29, Last => 36,
                    Facility_Index => 1, Key_Index => 8,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefgh
                 Z'(First => 106, Last => 120,
                    Facility_Index => 1, Key_Index => 15,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmno
                 Z'(First => 92, Last => 105,
                    Facility_Index => 1, Key_Index => 14,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmn
                 Z'(First => 137, Last => 153,
                    Facility_Index => 1, Key_Index => 17,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopq
                 Z'(First => 121, Last => 136,
                    Facility_Index => 1, Key_Index => 16,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnop
                 Z'(First => 4, Last => 6,
                    Facility_Index => 1, Key_Index => 3,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abc
                 Z'(First => 2, Last => 3,
                    Facility_Index => 1, Key_Index => 2,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦ab
                 Z'(First => 79, Last => 91,
                    Facility_Index => 1, Key_Index => 13,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklm
                 Z'(First => 67, Last => 78,
                    Facility_Index => 1, Key_Index => 12,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijkl
                 Z'(First => 254, Last => 276,
                    Facility_Index => 1, Key_Index => 23,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrstuvw
                 Z'(First => 232, Last => 253,
                    Facility_Index => 1, Key_Index => 22,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrstuv
                 Z'(First => 1, Last => 1,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 1, Source_Locale_Index => 1),
                 Z'(First => 172, Last => 190,
                    Facility_Index => 1, Key_Index => 19,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrs
                 Z'(First => 154, Last => 171,
                    Facility_Index => 1, Key_Index => 18,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqr
                 Z'(First => 211, Last => 231,
                    Facility_Index => 1, Key_Index => 21,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrstu
                 Z'(First => 191, Last => 210,
                    Facility_Index => 1, Key_Index => 20,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrst
                 Z'(First => 22, Last => 28,
                    Facility_Index => 1, Key_Index => 7,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefg
                 Z'(First => 16, Last => 21,
                    Facility_Index => 1, Key_Index => 6,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdef
                 Z'(First => 326, Last => 351,
                    Facility_Index => 1, Key_Index => 26,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcdefghijklmnopqrstuvwxyz
                 Z'(First => 11, Last => 15,
                    Facility_Index => 1, Key_Index => 5,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦abcde
                 Z'(First => 7, Last => 10,
                    Facility_Index => 1, Key_Index => 4,
                    Locale_Index => 1, Source_Locale_Index => 1));
   --  ↦abcd

   ---------------
   --- Facility --
   ---------------

   function Facility (Index : Positive) return Wide_String is
   begin
      return Facilities (Index).all;
   end Facility;

   ---------------------
   --- Facility_Count --
   ---------------------

   function Facility_Count return Natural is
   begin
      return Facilities'Length;
   end Facility_Count;

   ----------------
   -- Initialize --
   ----------------

   procedure Initialize (Catalog : ZTC.Catalog_Type := Standard_Catalog) is
   begin
      ZTC.Initialize (Catalog, Messages, Pool, Facilities, Keys, Locales,
                      "Xmpl",
                      Pool_Data_1'Length, 351);
   end Initialize;

   ----------
   --- Key --
   ----------

   function Key (Index : Positive) return Wide_String is
   begin
      return Keys (Index).all;
   end Key;

   ----------------
   --- Key_Count --
   ----------------

   function Key_Count return Natural is
   begin
      return Keys'Length;
   end Key_Count;

end Xmpl;

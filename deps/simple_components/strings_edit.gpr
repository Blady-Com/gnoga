project Strings_Edit is

   type Legacy_Type is ("Ada95", "Ada2005", "Ada2012");
   Legacy : Legacy_Type := external ("Legacy", "Ada2012");

   type Development_Type is ("Debug", "Release", "Profile");
   Development : Development_Type := external ("Development", "Debug");

   type OS_Type is
        (  "Windows", "Windows_NT",
           "Linux",
           "UNIX",
           "OSX",
           "FreeBSD",
           "auto"
        );
   Target_OS : OS_Type := external ("Target_OS", "Windows");

   type Arch_Type is ("x86_64", "i686", "armhf", "aarch64", "auto");
   Arch : Arch_Type := external ("arch", "x86_64");

   type Object_Dir_Scheme_Type is (".", "nested");
   Object_Dir_Scheme : Object_Dir_Scheme_Type :=
      external ("Object_Dir", ".");

   for Source_Files use
       (  "strings_edit-base64.adb",
          "strings_edit-base64.ads",
          "strings_edit-chacha20.adb",
          "strings_edit-chacha20.ads",
          "strings_edit-chacha20-aead.adb",
          "strings_edit-chacha20-aead.ads",
          "strings_edit-chacha20-poly1305.adb",
          "strings_edit-chacha20-poly1305.ads",
          "strings_edit-distinguished_names.adb",
          "strings_edit-distinguished_names.ads",
          "strings_edit-fields.adb",
          "strings_edit-fields.ads",
          "strings_edit-floats.ads",
          "strings_edit-float_edit.adb",
          "strings_edit-float_edit.ads",
          "strings_edit-generic_scale.adb", 
          "strings_edit-generic_scale.ads",
          "strings_edit-integers-subscript.ads",
          "strings_edit-integers-superscript.ads",
          "strings_edit-integers.ads",
          "strings_edit-integer_edit.adb",
          "strings_edit-integer_edit.ads",
          "strings_edit-iso_8601.adb",
          "strings_edit-iso_8601.ads",
          "strings_edit-lexicographical_order.adb",
          "strings_edit-lexicographical_order.ads",
          "strings_edit-long_floats.ads",
          "strings_edit-object_identifiers.adb",
          "strings_edit-object_identifiers.ads",
          "strings_edit-quoted.adb",
          "strings_edit-quoted.ads",
          "strings_edit-roman_edit.adb",
          "strings_edit-roman_edit.ads",
          "strings_edit-streams.adb",
          "strings_edit-streams.ads",
          "strings_edit-streams-generic_modular.adb",
          "strings_edit-streams-generic_modular.ads",
          "strings_edit-streams-generic_integer.adb",
          "strings_edit-streams-generic_integer.ads",
          "strings_edit-streams-generic_unsigned.adb",
          "strings_edit-streams-generic_unsigned.ads",
          "strings_edit-streams-integers.ads",
          "strings_edit-streams-integers_32.ads",
          "strings_edit-streams-integers_64.ads",
          "strings_edit-streams-naturals.ads",
          "strings_edit-streams-unsigneds_32.ads",
          "strings_edit-streams-unsigneds_64.ads",
          "strings_edit-text_edit.adb",
          "strings_edit-utf8-handling.adb",
          "strings_edit-utf8-handling.ads", 
          "strings_edit-utf8-categorization.adb", 
          "strings_edit-utf8-categorization.ads",
          "strings_edit-utf8-blocks.ads",
          "strings_edit-utf8-integer_edit.adb",
          "strings_edit-utf8-integer_edit.ads",
          "strings_edit-utf8-iso_8859_2.adb",
          "strings_edit-utf8-iso_8859_2.ads",
          "strings_edit-utf8-iso_8859_3.adb",
          "strings_edit-utf8-iso_8859_3.ads",
          "strings_edit-utf8-iso_8859_4.adb",
          "strings_edit-utf8-iso_8859_4.ads",
          "strings_edit-utf8-iso_8859_5.adb",
          "strings_edit-utf8-iso_8859_5.ads",
          "strings_edit-utf8-iso_8859_6.adb",
          "strings_edit-utf8-iso_8859_6.ads",
          "strings_edit-utf8-iso_8859_7.adb",
          "strings_edit-utf8-iso_8859_7.ads",
          "strings_edit-utf8-iso_8859_8.adb",
          "strings_edit-utf8-iso_8859_8.ads",
          "strings_edit-utf8-iso_8859_9.adb",
          "strings_edit-utf8-iso_8859_9.ads",
          "strings_edit-utf8-iso_8859_10.adb",
          "strings_edit-utf8-iso_8859_10.ads",
          "strings_edit-utf8-itu_t61.adb",
          "strings_edit-utf8-itu_t61.ads",
          "strings_edit-utf8-koi8.adb",
          "strings_edit-utf8-koi8.ads",
          "strings_edit-utf8-macos_roman.adb",
          "strings_edit-utf8-macos_roman.ads",
          "strings_edit-utf8-maps.adb",
          "strings_edit-utf8-maps.ads",
          "strings_edit-utf8-maps-constants.ads",
          "strings_edit-utf8-mapping.adb",
          "strings_edit-utf8-mapping.ads", 
          "strings_edit-utf8-radix50.adb",
          "strings_edit-utf8-radix50.ads",
          "strings_edit-utf8-recoding_streams.adb",
          "strings_edit-utf8-recoding_streams.ads",
          "strings_edit-utf8-subscript-integer_edit.ads",
          "strings_edit-utf8-subscript.adb",
          "strings_edit-utf8-subscript.ads", 
          "strings_edit-utf8-superscript-integer_edit.ads",
          "strings_edit-utf8-superscript.adb",
          "strings_edit-utf8-superscript.ads",
          "strings_edit-utf8-wildcards.adb",
          "strings_edit-utf8-wildcards.ads",
          "strings_edit-utf8-wildcards-case_insensitive.adb",
          "strings_edit-utf8-wildcards-case_insensitive.ads",
          "strings_edit-utf8-windows_1250.adb",
          "strings_edit-utf8-windows_1250.ads",
          "strings_edit-utf8-windows_1251.adb",
          "strings_edit-utf8-windows_1251.ads",
          "strings_edit-utf8-windows_1252.adb",
          "strings_edit-utf8-windows_1252.ads",
          "strings_edit-utf8-windows_1253.adb",
          "strings_edit-utf8-windows_1253.ads",
          "strings_edit-utf8-windows_1254.adb",
          "strings_edit-utf8-windows_1254.ads",
          "strings_edit-utf8-windows_1255.adb",
          "strings_edit-utf8-windows_1255.ads",
          "strings_edit-utf8-windows_1256.adb",
          "strings_edit-utf8-windows_1256.ads",
          "strings_edit-utf8-windows_1257.adb",
          "strings_edit-utf8-windows_1257.ads",
          "strings_edit-utf8-windows_1258.adb",
          "strings_edit-utf8-windows_1258.ads",
          "strings_edit-utf8.adb",
          "strings_edit-utf8.ads",
          "strings_edit.adb",
          "strings_edit.ads"
       );

   Target_Triplet := Project'Target;

   case Arch is
      when "auto" =>
         case Target_Triplet is
            when "aarch64-linux-gnu" =>
               Arch := "aarch64";
            when "arm-linux"           |
                 "arm-linux-gnueabi"   |
                 "arm-linux-gnueabihf" =>
               Arch := "armhf";
            when "x86_64-apple-darwin" |
                 "x86_64-darwin"       |
                 "x86_64-freebsd"      |
                 "x86_64-linux"        |
                 "x86_64-linux-gnu"    |
                 "x86_64-pc-cygwin"    |
                 "x86_64-redhat-linux" |
                 "x86_64-suse-linux"   |
                 "x86_64-w64-mingw32"  |
                 "x86_64-windows"      |
                 "x86-darwin"          |
                 "x86-linux"           |
                 "x86-suse-linux"      |
                 "x86-windows"         =>
               Arch := "x86_64";
            when "i686-freebsd"        |
                 "i686-linux-gnu"      |
                 "i686-pc-cygwin"      |
                 "i686-pc-mingw32"     |
                 "i686-redhat-linux"   |
                 "i686-suse-linux"     |
                 "i686-w64-mingw32"    =>
               Arch := "i686";
            when "" =>
               for Source_Files use
                   (  "target is undefined, "
                   &  "scenario auto cannot be used"
                   );
            when others =>
               for Source_Files use
                   (  "target "
                   &  Target_Triplet
                   &  " is unknown, scenario auto cannot be used"
                   );
         end case;
      when others =>
         null;
   end case;

   case Target_OS is
      when "auto" =>
         case Target_Triplet is
            when "aarch64-linux-gnu"   |
                 "arm-linux"           |
                 "arm-linux-gnueabi"   |
                 "arm-linux-gnueabihf" |
                 "x86_64-linux"        |
                 "x86_64-linux-gnu"    |
                 "x86_64-redhat-linux" |
                 "x86_64-suse-linux"   |
                 "x86-linux"           |
                 "x86-suse-linux"      |
                 "i686-linux-gnu"      |
                 "i686-redhat-linux"   |
                 "i686-suse-linux"     =>
               Target_OS := "Linux";
            when "x86_64-apple-darwin" |
                 "x86_64-darwin"       |
                 "x86-darwin"          =>
               Target_OS := "OSX";
            when "x86_64-freebsd"      |
                 "i686-freebsd"        =>
               Target_OS := "FreeBSD";
            when "x86_64-pc-cygwin"    |
                 "x86_64-w64-mingw32"  |
                 "x86_64-windows"      |
                 "x86-windows"         |
                 "i686-pc-cygwin"      |
                 "i686-pc-mingw32"     |
                 "i686-w64-mingw32"    =>
               Target_OS := "Windows";
            when "" =>
               for Source_Files use
                   (  "target is undefined, "
                   &  "scenario auto cannot be used"
                   );
            when others =>
               for Source_Files use
                   (  "target "
                   &  Target_Triplet
                   &  " is unknown, scenario auto cannot be used"
                   );
         end case;
      when others =>
         null;
   end case;

   for Source_Dirs use (".");

   Object_Dir_Path := "";
   case Object_Dir_Scheme is
      when "." =>
         Object_Dir_Path := ".";
      when "nested" =>
         case Target_OS is
            when "Windows" | "Windows_NT" =>
               Object_Dir_Path :=
                  "obj/windows/" & arch & "/" & Development;
            when "Linux" | "UNIX" =>
               Object_Dir_Path :=
                  "obj/linux/" & arch & "/" & Development;
            when "OSX" =>
               Object_Dir_Path :=
                  "obj/osx/" & arch & "/" & Development;
            when "FreeBSD" =>
               Object_Dir_Path :=
                  "obj/freebsd/" & arch & "/" & Development;
            when "auto" =>
               Object_Dir_Path :=
                  "obj/unknown/" & arch & "/" & Development;
         end case;
   end case;
   for Object_Dir use Object_Dir_Path;

   GNAT_XX := "";

   case Legacy is
      when "Ada95" =>
         GNAT_XX := "-gnat95";
      when "Ada2005" =>
         GNAT_XX := "-gnat2005";
      when "Ada2012" =>
         GNAT_XX := "-gnat2012";
   end case;

   package Compiler is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use
                (  "-gnatwcikmoprvz.c.p.t.w.x",
                   "-gnato",
                   "-gnatVaep",
                   "-gnatf",
                   "-gnatU",
                   "-g",
                   "-fstack-check",
                   "-Wall"
                )  & GNAT_XX;
         when "Release" =>
            for Default_Switches ("ada") use
                (  "-gnatwcikmoprvz.c.p.t.w.x",
                   "-gnatp",
                   "-gnatVaep",
                   "-gnatf",
                   "-gnatU",
                   "-O2",
                   "-gnatn"
                )  & GNAT_XX;
         when "Profile" =>
            for Default_Switches ("ada") use
                (  "-g",
                   "-pg"
                )  & GNAT_XX;
      end case;
   end Compiler;

   package Binder is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use ("-Es");
         when "Release" =>
            for Default_Switches ("ada") use ();
         when others =>
            null;
      end case;
   end Binder;

   package Builder is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use ("-g");
         when "Release" =>
            for Default_Switches ("ada") use ("-s");
         when others =>
            null;
      end case;
   end Builder;

   package Linker is
      case Development is
         when "Debug" =>
            for Default_Switches ("ada") use ("-g");
         when "Release" =>
            for Default_Switches ("ada") use ("-O2", "-s");
         when "Profile" =>
            for Default_Switches ("ada") use ("-g", "-pg");
      end case;
      case Target_OS is
         when "OSX" =>
            for Default_Switches ("Ada")
              use Linker'Default_Switches ("Ada") & ("-Wl,-no_pie");
         when others =>
            null;
      end case;
   end Linker;

end Strings_Edit;
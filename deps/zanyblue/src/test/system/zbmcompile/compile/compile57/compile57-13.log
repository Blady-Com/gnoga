--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.* - .*
--  This is a generated file and should not be edited.
--

with ZanyBlue.Text.Formatting;

package body ZBTest_Messages.ZBTest_Exceptions is

   use ZanyBlue.Text.Formatting;

   -----------------
   -- Raise_00001 --
   -----------------

   procedure Raise_00001 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Argument2   : in Any_Category_Type'Class;
      Argument3   : in Any_Category_Type'Class;
      Argument4   : in Any_Category_Type'Class;
      Argument5   : in Calendar_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Append (Arguments, Argument2);
      Append (Arguments, Argument3);
      Append (Arguments, Argument4);
      Append (Arguments, Argument5);
      Raise_Exception (E, Facility (1), Key (12),
                       Arguments, Locale, Catalog);
   end Raise_00001;

   -----------------
   -- Raise_00002 --
   -----------------

   procedure Raise_00002 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (29),
                       Arguments, Locale, Catalog);
   end Raise_00002;

   -----------------
   -- Raise_00003 --
   -----------------

   procedure Raise_00003 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Calendar_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (35),
                       Arguments, Locale, Catalog);
   end Raise_00003;

   -----------------
   -- Raise_00004 --
   -----------------

   procedure Raise_00004 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (147),
                       Arguments, Locale, Catalog);
   end Raise_00004;

   -----------------
   -- Raise_00005 --
   -----------------

   procedure Raise_00005 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (145),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00005;

   -----------------
   -- Raise_00006 --
   -----------------

   procedure Raise_00006 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (144),
                       Arguments, Locale, Catalog);
   end Raise_00006;

   -----------------
   -- Raise_00007 --
   -----------------

   procedure Raise_00007 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (11),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00007;

   -----------------
   -- Raise_00008 --
   -----------------

   procedure Raise_00008 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (28),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00008;

   -----------------
   -- Raise_00009 --
   -----------------

   procedure Raise_00009 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (94),
                       Arguments, Locale, Catalog);
   end Raise_00009;

   -----------------
   -- Raise_00010 --
   -----------------

   procedure Raise_00010 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (23),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00010;

   -----------------
   -- Raise_00011 --
   -----------------

   procedure Raise_00011 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (84),
                       Arguments, Locale, Catalog);
   end Raise_00011;

   -----------------
   -- Raise_00012 --
   -----------------

   procedure Raise_00012 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (101),
                       Arguments, Locale, Catalog);
   end Raise_00012;

   -----------------
   -- Raise_00013 --
   -----------------

   procedure Raise_00013 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (98),
                       Arguments, Locale, Catalog);
   end Raise_00013;

   -----------------
   -- Raise_00014 --
   -----------------

   procedure Raise_00014 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Argument2   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Append (Arguments, Argument2);
      Raise_Exception (E, Facility (1), Key (137),
                       Arguments, Locale, Catalog);
   end Raise_00014;

   -----------------
   -- Raise_00015 --
   -----------------

   procedure Raise_00015 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (97),
                       Arguments, Locale, Catalog);
   end Raise_00015;

   -----------------
   -- Raise_00016 --
   -----------------

   procedure Raise_00016 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (85),
                       Arguments, Locale, Catalog);
   end Raise_00016;

   -----------------
   -- Raise_00017 --
   -----------------

   procedure Raise_00017 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (118),
                       Arguments, Locale, Catalog);
   end Raise_00017;

   -----------------
   -- Raise_00018 --
   -----------------

   procedure Raise_00018 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Argument2   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Append (Arguments, Argument2);
      Raise_Exception (E, Facility (1), Key (83),
                       Arguments, Locale, Catalog);
   end Raise_00018;

   -----------------
   -- Raise_00019 --
   -----------------

   procedure Raise_00019 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (71),
                       Arguments, Locale, Catalog);
   end Raise_00019;

   -----------------
   -- Raise_00020 --
   -----------------

   procedure Raise_00020 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (111),
                       Arguments, Locale, Catalog);
   end Raise_00020;

   -----------------
   -- Raise_00021 --
   -----------------

   procedure Raise_00021 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (109),
                       Arguments, Locale, Catalog);
   end Raise_00021;

   -----------------
   -- Raise_00022 --
   -----------------

   procedure Raise_00022 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (48),
                       Arguments, Locale, Catalog);
   end Raise_00022;

   -----------------
   -- Raise_00023 --
   -----------------

   procedure Raise_00023 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (22),
                       Arguments, Locale, Catalog);
   end Raise_00023;

   -----------------
   -- Raise_00024 --
   -----------------

   procedure Raise_00024 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (105),
                       Arguments, Locale, Catalog);
   end Raise_00024;

   -----------------
   -- Raise_00025 --
   -----------------

   procedure Raise_00025 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (130),
                       Arguments, Locale, Catalog);
   end Raise_00025;

   -----------------
   -- Raise_00026 --
   -----------------

   procedure Raise_00026 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (136),
                       Arguments, Locale, Catalog);
   end Raise_00026;

   -----------------
   -- Raise_00027 --
   -----------------

   procedure Raise_00027 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (133),
                       Arguments, Locale, Catalog);
   end Raise_00027;

   -----------------
   -- Raise_00028 --
   -----------------

   procedure Raise_00028 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (134),
                       Arguments, Locale, Catalog);
   end Raise_00028;

   -----------------
   -- Raise_00029 --
   -----------------

   procedure Raise_00029 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (110),
                       Arguments, Locale, Catalog);
   end Raise_00029;

   -----------------
   -- Raise_00030 --
   -----------------

   procedure Raise_00030 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (15),
                       Arguments, Locale, Catalog);
   end Raise_00030;

   -----------------
   -- Raise_00031 --
   -----------------

   procedure Raise_00031 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (58),
                       Arguments, Locale, Catalog);
   end Raise_00031;

   -----------------
   -- Raise_00032 --
   -----------------

   procedure Raise_00032 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (96),
                       Arguments, Locale, Catalog);
   end Raise_00032;

   -----------------
   -- Raise_00033 --
   -----------------

   procedure Raise_00033 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (148),
                       Arguments, Locale, Catalog);
   end Raise_00033;

   -----------------
   -- Raise_00034 --
   -----------------

   procedure Raise_00034 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (129),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00034;

   -----------------
   -- Raise_00035 --
   -----------------

   procedure Raise_00035 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (132),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00035;

   -----------------
   -- Raise_00036 --
   -----------------

   procedure Raise_00036 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (103),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00036;

   -----------------
   -- Raise_00037 --
   -----------------

   procedure Raise_00037 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (135),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_00037;

   -----------------
   -- Raise_10001 --
   -----------------

   procedure Raise_10001 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (73),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_10001;

   -----------------
   -- Raise_10002 --
   -----------------

   procedure Raise_10002 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (59),
                       Arguments, Locale, Catalog);
   end Raise_10002;

   -----------------
   -- Raise_10003 --
   -----------------

   procedure Raise_10003 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (55),
                       Arguments, Locale, Catalog);
   end Raise_10003;

   -----------------
   -- Raise_10004 --
   -----------------

   procedure Raise_10004 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (113),
                       Arguments, Locale, Catalog);
   end Raise_10004;

   -----------------
   -- Raise_10005 --
   -----------------

   procedure Raise_10005 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (93),
                       Arguments, Locale, Catalog);
   end Raise_10005;

   -----------------
   -- Raise_10006 --
   -----------------

   procedure Raise_10006 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (16),
                       Arguments, Locale, Catalog);
   end Raise_10006;

   -----------------
   -- Raise_10007 --
   -----------------

   procedure Raise_10007 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (38),
                       Arguments, Locale, Catalog);
   end Raise_10007;

   -----------------
   -- Raise_10008 --
   -----------------

   procedure Raise_10008 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (146),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_10008;

   -----------------
   -- Raise_10009 --
   -----------------

   procedure Raise_10009 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (91),
                       Arguments, Locale, Catalog);
   end Raise_10009;

   -----------------
   -- Raise_10010 --
   -----------------

   procedure Raise_10010 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (87),
                       Arguments, Locale, Catalog);
   end Raise_10010;

   -----------------
   -- Raise_10011 --
   -----------------

   procedure Raise_10011 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (42),
                       Arguments, Locale, Catalog);
   end Raise_10011;

   -----------------
   -- Raise_10012 --
   -----------------

   procedure Raise_10012 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (27),
                       Arguments, Locale, Catalog);
   end Raise_10012;

   -----------------
   -- Raise_10013 --
   -----------------

   procedure Raise_10013 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (40),
                       Arguments, Locale, Catalog);
   end Raise_10013;

   -----------------
   -- Raise_10014 --
   -----------------

   procedure Raise_10014 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (50),
                       Arguments, Locale, Catalog);
   end Raise_10014;

   -----------------
   -- Raise_10015 --
   -----------------

   procedure Raise_10015 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (80),
                       Arguments, Locale, Catalog);
   end Raise_10015;

   -----------------
   -- Raise_10016 --
   -----------------

   procedure Raise_10016 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (62),
                       Arguments, Locale, Catalog);
   end Raise_10016;

   -----------------
   -- Raise_10017 --
   -----------------

   procedure Raise_10017 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (149),
                       Arguments, Locale, Catalog);
   end Raise_10017;

   -----------------
   -- Raise_10018 --
   -----------------

   procedure Raise_10018 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (31),
                       Arguments, Locale, Catalog);
   end Raise_10018;

   -----------------
   -- Raise_10019 --
   -----------------

   procedure Raise_10019 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Argument2   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Append (Arguments, Argument2);
      Raise_Exception (E, Facility (1), Key (64),
                       Arguments, Locale, Catalog);
   end Raise_10019;

   -----------------
   -- Raise_10020 --
   -----------------

   procedure Raise_10020 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (56),
                       Arguments, Locale, Catalog);
   end Raise_10020;

   -----------------
   -- Raise_10021 --
   -----------------

   procedure Raise_10021 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (26),
                       Arguments, Locale, Catalog);
   end Raise_10021;

   -----------------
   -- Raise_10022 --
   -----------------

   procedure Raise_10022 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (81),
                       Arguments, Locale, Catalog);
   end Raise_10022;

   -----------------
   -- Raise_10023 --
   -----------------

   procedure Raise_10023 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (119),
                       Arguments, Locale, Catalog);
   end Raise_10023;

   -----------------
   -- Raise_10024 --
   -----------------

   procedure Raise_10024 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (125),
                       Arguments, Locale, Catalog);
   end Raise_10024;

   -----------------
   -- Raise_10025 --
   -----------------

   procedure Raise_10025 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (36),
                       Arguments, Locale, Catalog);
   end Raise_10025;

   -----------------
   -- Raise_10026 --
   -----------------

   procedure Raise_10026 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (90),
                       Arguments, Locale, Catalog);
   end Raise_10026;

   -----------------
   -- Raise_10027 --
   -----------------

   procedure Raise_10027 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (25),
                       Arguments, Locale, Catalog);
   end Raise_10027;

   -----------------
   -- Raise_10028 --
   -----------------

   procedure Raise_10028 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (49),
                       Arguments, Locale, Catalog);
   end Raise_10028;

   -----------------
   -- Raise_10029 --
   -----------------

   procedure Raise_10029 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Raise_Exception (E, Facility (1), Key (53),
                       Arguments, Locale, Catalog);
   end Raise_10029;

   -----------------
   -- Raise_10030 --
   -----------------

   procedure Raise_10030 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (54),
                       Arguments, Locale, Catalog);
   end Raise_10030;

   -----------------
   -- Raise_10031 --
   -----------------

   procedure Raise_10031 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (100),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_10031;

   -----------------
   -- Raise_10032 --
   -----------------

   procedure Raise_10032 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (44),
                       Arguments, Locale, Catalog);
   end Raise_10032;

   -----------------
   -- Raise_10033 --
   -----------------

   procedure Raise_10033 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (47),
                       Arguments, Locale, Catalog);
   end Raise_10033;

   -----------------
   -- Raise_10034 --
   -----------------

   procedure Raise_10034 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Argument1   : in Any_Category_Type'Class;
      Argument2   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Append (Arguments, Argument2);
      Raise_Exception (E, Facility (1), Key (70),
                       Arguments, Locale, Catalog);
   end Raise_10034;

   -----------------
   -- Raise_10035 --
   -----------------

   procedure Raise_10035 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (72),
                       Arguments, Locale, Catalog);
   end Raise_10035;

   -----------------
   -- Raise_10036 --
   -----------------

   procedure Raise_10036 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (61),
                       Arguments, Locale, Catalog);
   end Raise_10036;

   -----------------
   -- Raise_10037 --
   -----------------

   procedure Raise_10037 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (88),
                       Arguments, Locale, Catalog);
   end Raise_10037;

   -----------------
   -- Raise_20000 --
   -----------------

   procedure Raise_20000 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (89),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20000;

   -----------------
   -- Raise_20001 --
   -----------------

   procedure Raise_20001 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (106),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20001;

   -----------------
   -- Raise_20002 --
   -----------------

   procedure Raise_20002 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (139),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20002;

   -----------------
   -- Raise_20003 --
   -----------------

   procedure Raise_20003 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (86),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20003;

   -----------------
   -- Raise_20004 --
   -----------------

   procedure Raise_20004 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (143),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20004;

   -----------------
   -- Raise_20005 --
   -----------------

   procedure Raise_20005 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (141),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20005;

   -----------------
   -- Raise_20006 --
   -----------------

   procedure Raise_20006 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (39),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20006;

   -----------------
   -- Raise_20007 --
   -----------------

   procedure Raise_20007 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (117),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20007;

   -----------------
   -- Raise_20008 --
   -----------------

   procedure Raise_20008 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (142),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20008;

   -----------------
   -- Raise_20009 --
   -----------------

   procedure Raise_20009 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (104),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20009;

   -----------------
   -- Raise_20010 --
   -----------------

   procedure Raise_20010 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (30),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20010;

   -----------------
   -- Raise_20011 --
   -----------------

   procedure Raise_20011 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (41),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20011;

   -----------------
   -- Raise_20012 --
   -----------------

   procedure Raise_20012 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (95),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20012;

   -----------------
   -- Raise_20013 --
   -----------------

   procedure Raise_20013 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (131),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20013;

   -----------------
   -- Raise_20014 --
   -----------------

   procedure Raise_20014 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (19),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20014;

   -----------------
   -- Raise_20015 --
   -----------------

   procedure Raise_20015 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (102),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20015;

   -----------------
   -- Raise_20016 --
   -----------------

   procedure Raise_20016 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (128),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20016;

   -----------------
   -- Raise_20017 --
   -----------------

   procedure Raise_20017 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (120),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20017;

   -----------------
   -- Raise_20018 --
   -----------------

   procedure Raise_20018 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (121),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20018;

   -----------------
   -- Raise_20019 --
   -----------------

   procedure Raise_20019 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (78),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20019;

   -----------------
   -- Raise_20020 --
   -----------------

   procedure Raise_20020 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (124),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20020;

   -----------------
   -- Raise_20021 --
   -----------------

   procedure Raise_20021 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (126),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20021;

   -----------------
   -- Raise_20022 --
   -----------------

   procedure Raise_20022 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (107),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20022;

   -----------------
   -- Raise_20023 --
   -----------------

   procedure Raise_20023 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (122),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20023;

   -----------------
   -- Raise_20024 --
   -----------------

   procedure Raise_20024 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (32),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_20024;

   -----------------
   -- Raise_30000 --
   -----------------

   procedure Raise_30000 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (112),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_30000;

   -----------------
   -- Raise_30001 --
   -----------------

   procedure Raise_30001 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (45),
                       Arguments, Locale, Catalog);
   end Raise_30001;

   -----------------
   -- Raise_30002 --
   -----------------

   procedure Raise_30002 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (67),
                       Arguments, Locale, Catalog);
   end Raise_30002;

   -----------------
   -- Raise_30003 --
   -----------------

   procedure Raise_30003 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (33),
                       Arguments, Locale, Catalog);
   end Raise_30003;

   -----------------
   -- Raise_30004 --
   -----------------

   procedure Raise_30004 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (24),
                       Arguments, Locale, Catalog);
   end Raise_30004;

   -----------------
   -- Raise_30005 --
   -----------------

   procedure Raise_30005 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (65),
                       Arguments, Locale, Catalog);
   end Raise_30005;

   -----------------
   -- Raise_30006 --
   -----------------

   procedure Raise_30006 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (17),
                       Arguments, Locale, Catalog);
   end Raise_30006;

   -----------------
   -- Raise_30007 --
   -----------------

   procedure Raise_30007 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (46),
                       Arguments, Locale, Catalog);
   end Raise_30007;

   -----------------
   -- Raise_30008 --
   -----------------

   procedure Raise_30008 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (75),
                       Arguments, Locale, Catalog);
   end Raise_30008;

   -----------------
   -- Raise_30009 --
   -----------------

   procedure Raise_30009 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (43),
                       Arguments, Locale, Catalog);
   end Raise_30009;

   -----------------
   -- Raise_30010 --
   -----------------

   procedure Raise_30010 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (57),
                       Arguments, Locale, Catalog);
   end Raise_30010;

   -----------------
   -- Raise_30011 --
   -----------------

   procedure Raise_30011 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (68),
                       Arguments, Locale, Catalog);
   end Raise_30011;

   -----------------
   -- Raise_30012 --
   -----------------

   procedure Raise_30012 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (37),
                       Arguments, Locale, Catalog);
   end Raise_30012;

   -----------------
   -- Raise_30013 --
   -----------------

   procedure Raise_30013 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (66),
                       Arguments, Locale, Catalog);
   end Raise_30013;

   -----------------
   -- Raise_30014 --
   -----------------

   procedure Raise_30014 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (69),
                       Arguments, Locale, Catalog);
   end Raise_30014;

   -----------------
   -- Raise_30015 --
   -----------------

   procedure Raise_30015 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (51),
                       Arguments, Locale, Catalog);
   end Raise_30015;

   -----------------
   -- Raise_30016 --
   -----------------

   procedure Raise_30016 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (74),
                       Arguments, Locale, Catalog);
   end Raise_30016;

   -----------------
   -- Raise_30017 --
   -----------------

   procedure Raise_30017 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (79),
                       Arguments, Locale, Catalog);
   end Raise_30017;

   -----------------
   -- Raise_30018 --
   -----------------

   procedure Raise_30018 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (76),
                       Arguments, Locale, Catalog);
   end Raise_30018;

   -----------------
   -- Raise_30019 --
   -----------------

   procedure Raise_30019 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (34),
                       Arguments, Locale, Catalog);
   end Raise_30019;

   -----------------
   -- Raise_30020 --
   -----------------

   procedure Raise_30020 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (52),
                       Arguments, Locale, Catalog);
   end Raise_30020;

   -----------------
   -- Raise_30021 --
   -----------------

   procedure Raise_30021 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (92),
                       Arguments, Locale, Catalog);
   end Raise_30021;

   -----------------
   -- Raise_30022 --
   -----------------

   procedure Raise_30022 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (20),
                       Arguments, Locale, Catalog);
   end Raise_30022;

   -----------------
   -- Raise_30023 --
   -----------------

   procedure Raise_30023 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (77),
                       Arguments, Locale, Catalog);
   end Raise_30023;

   -----------------
   -- Raise_30024 --
   -----------------

   procedure Raise_30024 (
      E           : in Ada.Exceptions.Exception_Id;
      Argument0   : in Any_Category_Type'Class;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Raise_Exception (E, Facility (1), Key (14),
                       Arguments, Locale, Catalog);
   end Raise_30024;

   -----------------
   -- Raise_40000 --
   -----------------

   procedure Raise_40000 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (123),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40000;

   -----------------
   -- Raise_40001 --
   -----------------

   procedure Raise_40001 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (10),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40001;

   -----------------
   -- Raise_40002 --
   -----------------

   procedure Raise_40002 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (2),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40002;

   -----------------
   -- Raise_40003 --
   -----------------

   procedure Raise_40003 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (7),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40003;

   -----------------
   -- Raise_40004 --
   -----------------

   procedure Raise_40004 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (3),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40004;

   -----------------
   -- Raise_40005 --
   -----------------

   procedure Raise_40005 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (9),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40005;

   -----------------
   -- Raise_40006 --
   -----------------

   procedure Raise_40006 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (4),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40006;

   -----------------
   -- Raise_40007 --
   -----------------

   procedure Raise_40007 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (8),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40007;

   -----------------
   -- Raise_40008 --
   -----------------

   procedure Raise_40008 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (63),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40008;

   -----------------
   -- Raise_40009 --
   -----------------

   procedure Raise_40009 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (1),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40009;

   -----------------
   -- Raise_40010 --
   -----------------

   procedure Raise_40010 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (21),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40010;

   -----------------
   -- Raise_40011 --
   -----------------

   procedure Raise_40011 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (13),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40011;

   -----------------
   -- Raise_40012 --
   -----------------

   procedure Raise_40012 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (108),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40012;

   -----------------
   -- Raise_40013 --
   -----------------

   procedure Raise_40013 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (18),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40013;

   -----------------
   -- Raise_40014 --
   -----------------

   procedure Raise_40014 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (127),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40014;

   -----------------
   -- Raise_40015 --
   -----------------

   procedure Raise_40015 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (138),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40015;

   -----------------
   -- Raise_40016 --
   -----------------

   procedure Raise_40016 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (140),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40016;

   -----------------
   -- Raise_40017 --
   -----------------

   procedure Raise_40017 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (114),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40017;

   -----------------
   -- Raise_40018 --
   -----------------

   procedure Raise_40018 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (115),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40018;

   -----------------
   -- Raise_40019 --
   -----------------

   procedure Raise_40019 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (6),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40019;

   -----------------
   -- Raise_40020 --
   -----------------

   procedure Raise_40020 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (99),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40020;

   -----------------
   -- Raise_40021 --
   -----------------

   procedure Raise_40021 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (82),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40021;

   -----------------
   -- Raise_40022 --
   -----------------

   procedure Raise_40022 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (60),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40022;

   -----------------
   -- Raise_40023 --
   -----------------

   procedure Raise_40023 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (116),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40023;

   -----------------
   -- Raise_40024 --
   -----------------

   procedure Raise_40024 (
      E           : in Ada.Exceptions.Exception_Id;
      Locale      : in Locale_Type  := Current_Locale;
      Catalog     : in Catalog_Type := Standard_Catalog)
   is
   begin
      Raise_Exception (E, Facility (1), Key (5),
                       Empty_Argument_List, Locale, Catalog);
   end Raise_40024;

end ZBTest_Messages.ZBTest_Exceptions;

--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

package body My_Package is

   package ZT  renames ZanyBlue.Text;
   package ZTC renames ZanyBlue.Text.Catalogs;

   subtype Z is ZTC.ZBMCompile_Definition;

   Facility_1 : aliased constant Wide_String := ""
      & "App"
      & "";
   Facilities : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Facility_1'Access);

   Key_1 : aliased constant Wide_String := ""
      & "msg0"
      & "";
   Key_2 : aliased constant Wide_String := ""
      & "msg1"
      & "";
   Key_3 : aliased constant Wide_String := ""
      & "msg2"
      & "";
   Key_4 : aliased constant Wide_String := ""
      & "msg3"
      & "";
   Key_5 : aliased constant Wide_String := ""
      & "msg4"
      & "";
   Key_6 : aliased constant Wide_String := ""
      & "msg5"
      & "";
   Key_7 : aliased constant Wide_String := ""
      & "msg6"
      & "";
   Key_8 : aliased constant Wide_String := ""
      & "msg7"
      & "";
   Key_9 : aliased constant Wide_String := ""
      & "msg8"
      & "";
   Key_10 : aliased constant Wide_String := ""
      & "msg9"
      & "";
   Key_11 : aliased constant Wide_String := ""
      & "msg10"
      & "";
   Key_12 : aliased constant Wide_String := ""
      & "msg11"
      & "";
   Key_13 : aliased constant Wide_String := ""
      & "msg12"
      & "";
   Key_14 : aliased constant Wide_String := ""
      & "msg13"
      & "";
   Key_15 : aliased constant Wide_String := ""
      & "msg14"
      & "";
   Key_16 : aliased constant Wide_String := ""
      & "msg15"
      & "";
   Key_17 : aliased constant Wide_String := ""
      & "msg16"
      & "";
   Key_18 : aliased constant Wide_String := ""
      & "msg17"
      & "";
   Key_19 : aliased constant Wide_String := ""
      & "msg18"
      & "";
   Key_20 : aliased constant Wide_String := ""
      & "msg19"
      & "";
   Key_21 : aliased constant Wide_String := ""
      & "msg20"
      & "";
   Key_22 : aliased constant Wide_String := ""
      & "msg21"
      & "";
   Key_23 : aliased constant Wide_String := ""
      & "msg22"
      & "";
   Key_24 : aliased constant Wide_String := ""
      & "msg23"
      & "";
   Key_25 : aliased constant Wide_String := ""
      & "msg24"
      & "";
   Key_26 : aliased constant Wide_String := ""
      & "msg25"
      & "";
   Key_27 : aliased constant Wide_String := ""
      & "msg26"
      & "";
   Key_28 : aliased constant Wide_String := ""
      & "msg27"
      & "";
   Key_29 : aliased constant Wide_String := ""
      & "msg28"
      & "";
   Key_30 : aliased constant Wide_String := ""
      & "msg29"
      & "";
   Key_31 : aliased constant Wide_String := ""
      & "msg30"
      & "";
   Key_32 : aliased constant Wide_String := ""
      & "msg31"
      & "";
   Keys : constant ZT.Constant_String_List (1 .. 32) := (
                   Key_1'Access,
                   Key_2'Access,
                   Key_3'Access,
                   Key_4'Access,
                   Key_5'Access,
                   Key_6'Access,
                   Key_7'Access,
                   Key_8'Access,
                   Key_9'Access,
                   Key_10'Access,
                   Key_11'Access,
                   Key_12'Access,
                   Key_13'Access,
                   Key_14'Access,
                   Key_15'Access,
                   Key_16'Access,
                   Key_17'Access,
                   Key_18'Access,
                   Key_19'Access,
                   Key_20'Access,
                   Key_21'Access,
                   Key_22'Access,
                   Key_23'Access,
                   Key_24'Access,
                   Key_25'Access,
                   Key_26'Access,
                   Key_27'Access,
                   Key_28'Access,
                   Key_29'Access,
                   Key_30'Access,
                   Key_31'Access,
                   Key_32'Access);

   Locale_1 : aliased constant Wide_String := ""
      & "";
   Locales : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Locale_1'Access);

   Pool_Data_1 : aliased constant Wide_String := ""
      & "This message contains char 0: "
      & Wide_Character'Val (16#0000#)
      & "This message contains char 1: "
      & Wide_Character'Val (16#0001#)
      & "This message contains char 2: "
      & Wide_Character'Val (16#0002#)
      & "This message contains char 3: "
      & Wide_Character'Val (16#0003#)
      & "This message contains char 4: "
      & Wide_Character'Val (16#0004#)
      & "This message contains char 5: "
      & Wide_Character'Val (16#0005#)
      & "This message contains char 6: "
      & Wide_Character'Val (16#0006#)
      & "This message contains char 7: "
      & Wide_Character'Val (16#0007#)
      & "This message contains char 8: "
      & Wide_Character'Val (16#0008#)
      & "This message contains char 9: "
      & Wide_Character'Val (16#0009#)
      & "This message contains char 10: "
      & Wide_Character'Val (16#000A#)
      & "This message contains char 11: "
      & Wide_Character'Val (16#000B#)
      & "This message contains char 12: "
      & Wide_Character'Val (16#000C#)
      & "This message contains char 13: "
      & Wide_Character'Val (16#000D#)
      & "This message contains char 14: "
      & Wide_Character'Val (16#000E#)
      & "This message contains char 15: "
      & Wide_Character'Val (16#000F#)
      & "This message contains char 16: "
      & Wide_Character'Val (16#0010#)
      & "This message contains char 17: "
      & Wide_Character'Val (16#0011#)
      & "This message contains char 18: "
      & Wide_Character'Val (16#0012#)
      & "This message contains char 19: "
      & Wide_Character'Val (16#0013#)
      & "This message contains char 20: "
      & Wide_Character'Val (16#0014#)
      & "This message contains char 21: "
      & Wide_Character'Val (16#0015#)
      & "This message contains char 22: "
      & Wide_Character'Val (16#0016#)
      & "This message contains char 23: "
      & Wide_Character'Val (16#0017#)
      & "This message contains char 24: "
      & Wide_Character'Val (16#0018#)
      & "This message contains char 25: "
      & Wide_Character'Val (16#0019#)
      & "This message contains char 26: "
      & Wide_Character'Val (16#001A#)
      & "This message contains char 27: "
      & Wide_Character'Val (16#001B#)
      & "This message contains char 28: "
      & Wide_Character'Val (16#001C#)
      & "This message contains char 29: "
      & Wide_Character'Val (16#001D#)
      & "This message contains char 30: "
      & Wide_Character'Val (16#001E#)
      & "This message contains char 31: "
      & Wide_Character'Val (16#001F#)
      & "";
   Pool : constant ZT.Static_Message_Pool_Type := Pool_Data_1'Access;

   Messages : constant ZTC.ZBMCompile_List (1 .. 32) := (
                 Z'(First => 983, Last => 1014,
                    Facility_Index => 1, Key_Index => 32,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 31: ␟
                 Z'(First => 759, Last => 790,
                    Facility_Index => 1, Key_Index => 25,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 24: ␘
                 Z'(First => 727, Last => 758,
                    Facility_Index => 1, Key_Index => 24,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 23: ␗
                 Z'(First => 311, Last => 342,
                    Facility_Index => 1, Key_Index => 11,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 10: ⏎
                 Z'(First => 280, Last => 310,
                    Facility_Index => 1, Key_Index => 10,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 9: ␉
                 Z'(First => 951, Last => 982,
                    Facility_Index => 1, Key_Index => 31,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 30: ␞
                 Z'(First => 919, Last => 950,
                    Facility_Index => 1, Key_Index => 30,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 29: ␝
                 Z'(First => 249, Last => 279,
                    Facility_Index => 1, Key_Index => 9,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 8: ␈
                 Z'(First => 218, Last => 248,
                    Facility_Index => 1, Key_Index => 8,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 7: ␇
                 Z'(First => 887, Last => 918,
                    Facility_Index => 1, Key_Index => 29,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 28: ␜
                 Z'(First => 855, Last => 886,
                    Facility_Index => 1, Key_Index => 28,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 27: ␛
                 Z'(First => 439, Last => 470,
                    Facility_Index => 1, Key_Index => 15,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 14: ␎
                 Z'(First => 407, Last => 438,
                    Facility_Index => 1, Key_Index => 14,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 13: ␍
                 Z'(First => 503, Last => 534,
                    Facility_Index => 1, Key_Index => 17,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 16: ␐
                 Z'(First => 471, Last => 502,
                    Facility_Index => 1, Key_Index => 16,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 15: ␏
                 Z'(First => 63, Last => 93,
                    Facility_Index => 1, Key_Index => 3,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 2: ␂
                 Z'(First => 32, Last => 62,
                    Facility_Index => 1, Key_Index => 2,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 1: ␁
                 Z'(First => 375, Last => 406,
                    Facility_Index => 1, Key_Index => 13,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 12: ␌
                 Z'(First => 343, Last => 374,
                    Facility_Index => 1, Key_Index => 12,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 11: ␋
                 Z'(First => 695, Last => 726,
                    Facility_Index => 1, Key_Index => 23,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 22: ␖
                 Z'(First => 663, Last => 694,
                    Facility_Index => 1, Key_Index => 22,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 21: ␕
                 Z'(First => 1, Last => 31,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 0: ␀
                 Z'(First => 567, Last => 598,
                    Facility_Index => 1, Key_Index => 19,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 18: ␒
                 Z'(First => 535, Last => 566,
                    Facility_Index => 1, Key_Index => 18,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 17: ␑
                 Z'(First => 631, Last => 662,
                    Facility_Index => 1, Key_Index => 21,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 20: ␔
                 Z'(First => 599, Last => 630,
                    Facility_Index => 1, Key_Index => 20,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 19: ␓
                 Z'(First => 187, Last => 217,
                    Facility_Index => 1, Key_Index => 7,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 6: ␆
                 Z'(First => 156, Last => 186,
                    Facility_Index => 1, Key_Index => 6,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 5: ␅
                 Z'(First => 823, Last => 854,
                    Facility_Index => 1, Key_Index => 27,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 26: ␚
                 Z'(First => 791, Last => 822,
                    Facility_Index => 1, Key_Index => 26,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 25: ␙
                 Z'(First => 125, Last => 155,
                    Facility_Index => 1, Key_Index => 5,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This message contains char 4: ␄
                 Z'(First => 94, Last => 124,
                    Facility_Index => 1, Key_Index => 4,
                    Locale_Index => 1, Source_Locale_Index => 1));
   --  ↦This message contains char 3: ␃

   ---------------
   --- Facility --
   ---------------

   function Facility (Index : Positive) return Wide_String is
   begin
      return Facilities (Index).all;
   end Facility;

   ---------------------
   --- Facility_Count --
   ---------------------

   function Facility_Count return Natural is
   begin
      return Facilities'Length;
   end Facility_Count;

   ----------------
   -- Initialize --
   ----------------

   procedure Initialize (Catalog : ZTC.Catalog_Type := Standard_Catalog) is
   begin
      ZTC.Initialize (Catalog, Messages, Pool, Facilities, Keys, Locales,
                      "My_Package",
                      Pool_Data_1'Length, 1014);
   end Initialize;

   ----------
   --- Key --
   ----------

   function Key (Index : Positive) return Wide_String is
   begin
      return Keys (Index).all;
   end Key;

   ----------------
   --- Key_Count --
   ----------------

   function Key_Count return Natural is
   begin
      return Keys'Length;
   end Key_Count;

end My_Package;

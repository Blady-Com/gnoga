--  -*- coding: utf-8 -*-
--
--  ZanyBlue, an Ada library and framework for finite element analysis.
--
--  Copyright (c) 2012, Michael Rohan <mrohan@zanyblue.com>
--  All rights reserved.
--
--  Redistribution and use in source and binary forms, with or without
--  modification, are permitted provided that the following conditions
--  are met:
--
--    * Redistributions of source code must retain the above copyright
--      notice, this list of conditions and the following disclaimer.
--
--    * Redistributions in binary form must reproduce the above copyright
--      notice, this list of conditions and the following disclaimer in the
--      documentation and/or other materials provided with the distribution.
--
--    * Neither the name of ZanyBlue nor the names of its contributors may
--      be used to endorse or promote products derived from this software
--      without specific prior written permission.
--
--  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
--  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
--  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
--  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
--  HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
--  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
--  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
--  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
--  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
--  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
--  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
--
--  Ada implementation generated by ZBMCompile
--  This is a generated file and should not be edited.
--

package body ZanyBlue.Test.Text.Catalogs.Xmpl_Data3 is

   use ZTC;              -- ZanyBlue.Text.Catalogs from specfication
   use ZTF;              -- ZanyBlue.Text.Formatting from specfication
   use ZanyBlue.Text;

   K_1 : aliased constant Wide_String := "01";
   K_2 : aliased constant Wide_String := "02";
   Keys : constant Constant_String_List := (
              1 => K_1'Access,
              2 => K_2'Access);

   L_1 : aliased constant Wide_String := "";
   L_2 : aliased constant Wide_String := "fr";
   L_3 : aliased constant Wide_String := "he";
   Locales : constant Constant_String_List := (
                 1 => L_1'Access,
                 2 => L_2'Access,
                 3 => L_3'Access);

   Pool_Data : aliased constant Wide_String := ""
      & "This fac1 message 0001This fac1 message 0002This fac1 messa"
      & "ge 0001 (fr)This fac1 message 0002 (fr)This fac2 message 00"
      & "01 (he)This fac2 message 0002 (he)This fac2 message 0001Thi"
      & "s fac2 message 0002"
      & "";
   Pool : constant Static_Message_Pool_Type := Pool_Data'Access;

   Messages : constant ZBMCompile_List := (
       1 => ZBMCompile_Definition'(Facility_Index => 1,
                                   Key_Index => 1,
                                   Locale_Index => 1,
                                   Source_Locale_Index => 1,
                                   First => 1,
                                   Last => 22),
       2 => ZBMCompile_Definition'(Facility_Index => 1,
                                   Key_Index => 2,
                                   Locale_Index => 1,
                                   Source_Locale_Index => 1,
                                   First => 23,
                                   Last => 44),
       3 => ZBMCompile_Definition'(Facility_Index => 2,
                                   Key_Index => 1,
                                   Locale_Index => 1,
                                   Source_Locale_Index => 1,
                                   First => 153,
                                   Last => 174),
       4 => ZBMCompile_Definition'(Facility_Index => 2,
                                   Key_Index => 2,
                                   Locale_Index => 1,
                                   Source_Locale_Index => 1,
                                   First => 175,
                                   Last => 196),
       5 => ZBMCompile_Definition'(Facility_Index => 1,
                                   Key_Index => 1,
                                   Locale_Index => 2,
                                   Source_Locale_Index => 2,
                                   First => 45,
                                   Last => 71),
       6 => ZBMCompile_Definition'(Facility_Index => 1,
                                   Key_Index => 2,
                                   Locale_Index => 2,
                                   Source_Locale_Index => 2,
                                   First => 72,
                                   Last => 98),
       7 => ZBMCompile_Definition'(Facility_Index => 2,
                                   Key_Index => 1,
                                   Locale_Index => 3,
                                   Source_Locale_Index => 3,
                                   First => 99,
                                   Last => 125),
       8 => ZBMCompile_Definition'(Facility_Index => 2,
                                   Key_Index => 2,
                                   Locale_Index => 3,
                                   Source_Locale_Index => 3,
                                   First => 126,
                                   Last => 152));

   procedure Initialize (Catalog : Catalog_Type := Standard_Catalog) is
   begin
      Initialize (Catalog, Messages, Pool, Facilities, Keys, Locales);
   end Initialize;

end ZanyBlue.Test.Text.Catalogs.Xmpl_Data3;

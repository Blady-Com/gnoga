# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

fileClassLoader.canRead=Repository {0} cannot be read
fileClassLoader.exists=Repository {0} does not exist
fileClassLoader.jarFile=Cannot read JAR file {0}
fileClassLoader.restricted=Cannot load restricted class {0}
standardLoader.addRepository=Adding repository {0}
standardLoader.alreadyStarted=Loader has already been started
standardLoader.checkInterval=Cannot set reload check interval to {0} seconds
standardLoader.notContext=Cannot auto-reload unless our Container is a Context
standardLoader.notReloadabe=Reloadable property is set to false
standardLoader.notStarted=Loader has not yet been started
standardLoader.reloadable=Cannot set reloadable property to {0}
standardLoader.reloading=Reloading checks are enabled for this Context
standardLoader.removeRepository=Removing repository {0}
standardLoader.starting=Starting this Loader
standardLoader.stopping=Stopping this Loader
webappClassLoader.illegalJarPath=Illegal JAR entry detected with name {0}
webappClassLoader.jdbcRemoveFailed=JDBC driver de-registration failed
webappClassLoader.jdbcRemoveStreamError=Exception closing input stream during JDBC driver de-registration
webappClassLoader.stopped=Illegal access: this web application instance has been stopped already.  Could not load {0}.  The eventual following stack trace is caused by an error thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access, and has no functional impact.
webappClassLoader.readError=Resource read error: Could not load {0}.
webappClassLoader.clearJbdc=A web application registered the JBDC driver [{0}] but failed to unregister it when the web application was stopped. To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
webappClassLoader.clearReferencesResourceBundlesCount=Removed [{0}] ResourceBundle references from the cache
webappClassLoader.clearReferencesResourceBundlesFail=Failed to clear ResourceBundle references
webappClassLoader.clearRmiInfo=Failed to find class sun.rmi.transport.Target to clear context class loader. This is expected on non-Sun JVMs.
webappClassLoader.clearRmiFail=Failed to clear context class loader referenced from sun.rmi.transport.Target 
webappClassLoader.clearThreadLocalDebug=A web application created a ThreadLocal with key of type [{0}] (value [{1}]). The ThreadLocal has been correctly set to null and the key will be removed by GC. However, to simplify the process of tracing memory leaks, the key has been forcibly removed.
webappClassLoader.clearThreadLocal=A web application created a ThreadLocal with key of type [{0}] (value [{1}]) and a value of type [{2}] (value [{3}]) but failed to remove it when the web application was stopped. To prevent a memory leak, the ThreadLocal has been forcibly removed.
webappClassLoader.clearThreadLocalFail=Failed to clear ThreadLocal references
webappClassLoader.stopThreadFail=Failed to terminate thread named [{0}]
webappClassLoader.stopTimerThreadFail=Failed to terminate TimerThread named [{0}]
webappClassLoader.validationErrorJarPath=Unable to validate JAR entry with name {0}
webappClassLoader.warnThread=A web application appears to have started a thread named [{0}] but has failed to stop it. This is very likely to create a memory leak.
webappClassLoader.warnTimerThread=A web application appears to have started a TimerThread named [{0}] via the java.util.Timer API but has failed to stop it. To prevent a memory leak, the timer (and hence the associated thread) has been forcibly cancelled. 
webappClassLoader.wrongVersion=(unable to load class {0})
webappLoader.addRepository=Adding repository {0}
webappLoader.deploy=Deploying class repositories to work directory {0}
webappLoader.jarDeploy=Deploy JAR {0} to {1}
webappLoader.classDeploy=Deploy class files {0} to {1}
webappLoader.alreadyStarted=Loader has already been started
webappLoader.checkInterval=Cannot set reload check interval to {0} seconds
webappLoader.notContext=Cannot auto-reload unless our Container is a Context
webappLoader.notReloadabe=Reloadable property is set to false
webappLoader.notStarted=Loader has not yet been started
webappLoader.reloadable=Cannot set reloadable property to {0}
webappLoader.reloading=Reloading checks are enabled for this Context
webappLoader.removeRepository=Removing repository {0}
webappLoader.starting=Starting this Loader
webappLoader.stopping=Stopping this Loader
webappLoader.failModifiedCheck=Error tracking modifications
webappLoader.copyFailure=Failed to copy resources
webappLoader.namingFailure=Failed to access resource {0}

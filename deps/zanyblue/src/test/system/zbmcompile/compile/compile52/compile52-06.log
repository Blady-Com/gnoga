--  -*- coding: utf-8 -*-
--
--  Ada specification generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

with ZanyBlue.Text.Catalogs;
with ZanyBlue.Text.Locales;
with ZanyBlue.Text.Arguments;

package GPS_Text.Aunit_Strings is

   use ZanyBlue.Text.Catalogs;
   use ZanyBlue.Text.Locales;
   use ZanyBlue.Text.Arguments;

   function Format_00001 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Edit

   function Format_00002 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Unit Testing

   function Format_00003 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Aliases

   function Format_00004 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦New Test _Case...

   function Format_00005 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦_Add Routine...

   function Format_00006 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦New Test _Suite...

   function Format_00007 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦New Test _Harness...

   function Format_00008 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Make new harness

   function Format_00009 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Save in:

   function Format_00010 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Procedure name:

   function Format_00011 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Suite file:

   function Format_00012 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Browse...

   function Format_00013 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Harness

   function Format_00014 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --

   function Format_00015 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Invalid or non existing directory selected

   function Format_00016 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Missing the harness name

   function Format_00017 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Please select a test suite file

   function Format_00018 (
      Argument0   : Any_Category_Type'Class;
      Argument1   : Any_Category_Type'Class;
      Argument2   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Ready to create "{0}" with test suite "{1}" from packag⤶
   --  ↦e "{2}"

   function Format_00019 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦All files

   function Format_00020 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Ada files

   function Format_00021 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Suite files

   function Format_00022 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Select test harness

   function Format_00023 (
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦The file {0} does not contain a test suite.

   function Format_00024 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Make new suite

   function Format_00025 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Suite name:

   function Format_00026 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦New_Suite

   function Format_00027 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦The following tests will be added to the new suite:

   function Format_00028 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Create AUnit1.x test suite

   function Format_00029 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Missing test suite name

   function Format_00030 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Missing test

   function Format_00031 (
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Ready to create new test suite {0}"

   function Format_00032 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Suite and test files

   function Format_00033 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Make new test case

   function Format_00034 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Unit name:

   function Format_00035 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Description:

   function Format_00036 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦New_Test

   function Format_00037 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦(no description)

   function Format_00038 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Override Tear_Down

   function Format_00039 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Override Set_up

   function Format_00040 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Create AUnit1.x test case

   function Format_00041 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Missing test case name

   function Format_00042 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Missing test case description

   function Format_00043 (
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String;
   --  ↦Ready to create new test case {0}

end GPS_Text.Aunit_Strings;

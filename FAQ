Q) Where can I learn more about Gnoga?

A) http://www.gnoga.com and going to the sourceforge site and joining the mailing list. Reading the sources tests and demos are also a good place to start.

Q) What licenses does Gnoga use?

A) Gnoga is under the GNAT modified GPLv3 with runtime exceptions which means your code can use any license you like but any modifications, extensions, etc. of Gnoga fall under the same license and source for those changes must be distributed with binaries.

Q) Why does Gnoga use the GMGPL and not the GPL license?

A) One goal of Gnoga is to encourage the use of Ada for general use  modern software development, forcing applications to be under the GPL license would limit that side goal. However those of use believing in the idea of "free" software would encourage choosing a "free" license for your projects.

Q) Can I distribute programs I compile with Gnoga as proprietary applications?

A) Yes, unless you have used the GNAT-GPL shareware version from libre, which showcases AdaCore's GNAT-PRO. Their GPL version is designed to pass the "GPL virus" too anything compiled with it to encourage purchasing their support packages. Of course though we encourage the GPL license (or for libraries GMGPL) whenever reasonable :)

Q) Can I launch a browser on start up to access by Gnoga Application?

A) Yes, See Gnoga.Applications.Open_URL_* there is a version of that procedure
   for Mac OSX, Windows and Linux

Q) How do I use Gnoga with MinGW or Cygwin on Windows 32 or 64bits?

A) Gnoga by default uses gprtools that are not included with those distros. The makefile contains simple directions of what to comment and uncomment in order to use gnatmake and gnatclean under MSYS or Cygwin environments. You can also compile Gnoga from the regular Windows command line see make.bat and clean.bat.

Q) How to compile Gnoga on Debian (wheezy)?

A) You will need to use a more recent version of gcc/ada currently. Using the gcc/ada from Debian Jesse works well.

Q) How to use Gnoga on a Rasbery Pi?

A) If you are using Raspbian you need to make sure it is Raspbian based on Debian Jessie or later. If you are running the Raspbian based on Wheezy you can use the following to upgrade you Pi to Jessie:

sudo vi /etc/apt/sources.list
--  change all references to wheezy to jessie

sudo apt-get update
sudo apt-get upgrade 
sudo apt-get dist-upgrade

sudo apt-get install gnat

Q) Do I need Sqlite3 or MySQL installed to use Gnoga?

A) Only if you choose to build database apps or compilie the database examples. You can disable compiling the MySQL example if you want to just use SqlLite3.

Q) Do I need to have Cairo installed?

A) Only if you choose to use the Cairo bindings to produce bitmaps, PDFs or SVGs. They are not used by Gnoga internally.

Q) How do I get sqlite3 and MySQL on my Mac for use with Gnoga?

Sqlite3 is already built in to Mac OS X. You would only need to install MySQL if you wanted to run the MySQL test or wanted to use MySQL. There are many ways to install the need MySQL client libraries on Mac OS X, http://brew.sh/ is a simple solution. Here is a simple set of steps once you have installed homebrew on Mac:

--  Insure that all is up to date
brew update
brew doctor
brew upgrade

brew install mysql-connector-c

Q) How can I set up tests for Gnoga Applications?

A) There are many products on the market for testing Web sites / apps, any of those can be used with Gnoga as well. For example one inexpensive one for Mac is Fake.app http://fakeapp.com/

Q) Can I Build native Mac OS X applications with Gnoga.

A) Yes, I have build native apps using - http://macgapproject.github.io/
   Gnoga will be adding specific support for MacGap soon

Q) Can I build standalone true native desktop apps?

A) Yes, there are a number of ways of doing it. As time permits various examples will be created using available products. Here are some options:

- https://github.com/subtleGradient/Appify-UI
- XulRunner
- https://github.com/neam/webapp-xul-wrapper
- http://fluidapp.com/ on Mac
- http://www.tidesdk.org/
- https://github.com/apache/cordova-osx

Q) Can I buid native iOS apps for my iPhone or iPad?

A) In theory it should be possible using GNAT with an LLVM backend and PhoneGAP. I have not explored it yet.

Q) Can I buid native Android Apps?

A) In theory it should be possible using gcc/ada with an Android target and PhoneGAP. I have not explored it yet.

Q) Can I build _native_ Chromebook apps?

A) It should be possible using gcc/ada, I have not yet explored the requirements for it, but Chromebooks are running linux and Google does have a spec for it.

Q) Is it possible to use a reverse proxies / load balancers with Gnoga Apps?

A) Gnoga uses websockets which uses an http "upgrade" mechanism which means
the proxy or load balancer must have some knowledge of how to handle websockets. The two most popular Apache and Nginx support it:

For nginx see:
   http://nginx.org/en/docs/http/websocket.html
   http://nginx.com/blog/websocket-nginx/

For Apache 2.4.5+ see:
   http://httpd.apache.org/docs/2.4/mod/mod_proxy_wstunnel.html

Example of Gnoga application as its own domain:

<VirtualHost *:80>
    ServerName snake.gnoga.com
    ServerAdmin david@botton.com

    ProxyPass /gnoga ws://127.0.0.1:8080/gnoga
    ProxyPass / http://127.0.0.1:8080/
    ProxyPassReverse / http://127.0.0.1:8080/

    ErrorLog ${APACHE_LOG_DIR}/gnoga.err.log
    CustomLog ${APACHE_LOG_DIR}/gnoga.log common
</VirtualHost>

Example of a Gnoga application as a subdirectory on a larger site using apache:

<VirtualHost *:80>
    ServerName gnoga.com
    ServerAlias www.gnoga.com
    ServerAdmin david@botton.com
    DocumentRoot /www/gnoga

    ProxyPass /snake http://127.0.0.1:8080
    ProxyPassReverse /snake http://www.gnoga.com:8080
    ProxyPass /gnoga ws://www.gnoga.com:8080/gnoga
    ProxyPass /js http://www.gnoga.com:8080/js

    ErrorLog ${APACHE_LOG_DIR}/gnoga.err.log
    CustomLog ${APACHE_LOG_DIR}/gnoga.log common
</VirtualHost>

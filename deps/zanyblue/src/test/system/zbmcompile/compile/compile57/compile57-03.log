--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.*
--  This is a generated file and should not be edited.
--

package body ZBTest_Messages is

   package ZT  renames ZanyBlue.Text;
   package ZTC renames ZanyBlue.Text.Catalogs;

   subtype Z is ZTC.ZBMCompile_Definition;

   Facility_1 : aliased constant Wide_String := ""
      & "ZBTest"
      & "";
   Facilities : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Facility_1'Access);

   Key_1 : aliased constant Wide_String := ""
      & "00001"
      & "";
   Key_2 : aliased constant Wide_String := ""
      & "00002"
      & "";
   Key_3 : aliased constant Wide_String := ""
      & "00003"
      & "";
   Key_4 : aliased constant Wide_String := ""
      & "00004"
      & "";
   Key_5 : aliased constant Wide_String := ""
      & "00005"
      & "";
   Key_6 : aliased constant Wide_String := ""
      & "00006"
      & "";
   Key_7 : aliased constant Wide_String := ""
      & "00007"
      & "";
   Key_8 : aliased constant Wide_String := ""
      & "00008"
      & "";
   Key_9 : aliased constant Wide_String := ""
      & "00009"
      & "";
   Key_10 : aliased constant Wide_String := ""
      & "00010"
      & "";
   Key_11 : aliased constant Wide_String := ""
      & "00011"
      & "";
   Key_12 : aliased constant Wide_String := ""
      & "00012"
      & "";
   Key_13 : aliased constant Wide_String := ""
      & "00013"
      & "";
   Key_14 : aliased constant Wide_String := ""
      & "00014"
      & "";
   Key_15 : aliased constant Wide_String := ""
      & "00015"
      & "";
   Key_16 : aliased constant Wide_String := ""
      & "00016"
      & "";
   Key_17 : aliased constant Wide_String := ""
      & "00017"
      & "";
   Key_18 : aliased constant Wide_String := ""
      & "00018"
      & "";
   Key_19 : aliased constant Wide_String := ""
      & "00019"
      & "";
   Key_20 : aliased constant Wide_String := ""
      & "00020"
      & "";
   Key_21 : aliased constant Wide_String := ""
      & "00021"
      & "";
   Key_22 : aliased constant Wide_String := ""
      & "00022"
      & "";
   Key_23 : aliased constant Wide_String := ""
      & "00023"
      & "";
   Key_24 : aliased constant Wide_String := ""
      & "00024"
      & "";
   Key_25 : aliased constant Wide_String := ""
      & "00025"
      & "";
   Key_26 : aliased constant Wide_String := ""
      & "00026"
      & "";
   Key_27 : aliased constant Wide_String := ""
      & "00027"
      & "";
   Key_28 : aliased constant Wide_String := ""
      & "00028"
      & "";
   Key_29 : aliased constant Wide_String := ""
      & "00029"
      & "";
   Key_30 : aliased constant Wide_String := ""
      & "00030"
      & "";
   Key_31 : aliased constant Wide_String := ""
      & "00031"
      & "";
   Key_32 : aliased constant Wide_String := ""
      & "00032"
      & "";
   Key_33 : aliased constant Wide_String := ""
      & "00033"
      & "";
   Key_34 : aliased constant Wide_String := ""
      & "00034"
      & "";
   Key_35 : aliased constant Wide_String := ""
      & "00035"
      & "";
   Key_36 : aliased constant Wide_String := ""
      & "00036"
      & "";
   Key_37 : aliased constant Wide_String := ""
      & "00037"
      & "";
   Key_38 : aliased constant Wide_String := ""
      & "10001"
      & "";
   Key_39 : aliased constant Wide_String := ""
      & "10002"
      & "";
   Key_40 : aliased constant Wide_String := ""
      & "10003"
      & "";
   Key_41 : aliased constant Wide_String := ""
      & "10004"
      & "";
   Key_42 : aliased constant Wide_String := ""
      & "10005"
      & "";
   Key_43 : aliased constant Wide_String := ""
      & "10006"
      & "";
   Key_44 : aliased constant Wide_String := ""
      & "10007"
      & "";
   Key_45 : aliased constant Wide_String := ""
      & "10008"
      & "";
   Key_46 : aliased constant Wide_String := ""
      & "10009"
      & "";
   Key_47 : aliased constant Wide_String := ""
      & "10010"
      & "";
   Key_48 : aliased constant Wide_String := ""
      & "10011"
      & "";
   Key_49 : aliased constant Wide_String := ""
      & "10012"
      & "";
   Key_50 : aliased constant Wide_String := ""
      & "10013"
      & "";
   Key_51 : aliased constant Wide_String := ""
      & "10014"
      & "";
   Key_52 : aliased constant Wide_String := ""
      & "10015"
      & "";
   Key_53 : aliased constant Wide_String := ""
      & "10016"
      & "";
   Key_54 : aliased constant Wide_String := ""
      & "10017"
      & "";
   Key_55 : aliased constant Wide_String := ""
      & "10018"
      & "";
   Key_56 : aliased constant Wide_String := ""
      & "10019"
      & "";
   Key_57 : aliased constant Wide_String := ""
      & "10020"
      & "";
   Key_58 : aliased constant Wide_String := ""
      & "10021"
      & "";
   Key_59 : aliased constant Wide_String := ""
      & "10022"
      & "";
   Key_60 : aliased constant Wide_String := ""
      & "10023"
      & "";
   Key_61 : aliased constant Wide_String := ""
      & "10024"
      & "";
   Key_62 : aliased constant Wide_String := ""
      & "10025"
      & "";
   Key_63 : aliased constant Wide_String := ""
      & "10026"
      & "";
   Key_64 : aliased constant Wide_String := ""
      & "10027"
      & "";
   Key_65 : aliased constant Wide_String := ""
      & "10028"
      & "";
   Key_66 : aliased constant Wide_String := ""
      & "10029"
      & "";
   Key_67 : aliased constant Wide_String := ""
      & "10030"
      & "";
   Key_68 : aliased constant Wide_String := ""
      & "10031"
      & "";
   Key_69 : aliased constant Wide_String := ""
      & "10032"
      & "";
   Key_70 : aliased constant Wide_String := ""
      & "10033"
      & "";
   Key_71 : aliased constant Wide_String := ""
      & "10034"
      & "";
   Key_72 : aliased constant Wide_String := ""
      & "10035"
      & "";
   Key_73 : aliased constant Wide_String := ""
      & "10036"
      & "";
   Key_74 : aliased constant Wide_String := ""
      & "10037"
      & "";
   Key_75 : aliased constant Wide_String := ""
      & "20000"
      & "";
   Key_76 : aliased constant Wide_String := ""
      & "30000"
      & "";
   Key_77 : aliased constant Wide_String := ""
      & "40000"
      & "";
   Key_78 : aliased constant Wide_String := ""
      & "20001"
      & "";
   Key_79 : aliased constant Wide_String := ""
      & "30001"
      & "";
   Key_80 : aliased constant Wide_String := ""
      & "40001"
      & "";
   Key_81 : aliased constant Wide_String := ""
      & "20002"
      & "";
   Key_82 : aliased constant Wide_String := ""
      & "30002"
      & "";
   Key_83 : aliased constant Wide_String := ""
      & "40002"
      & "";
   Key_84 : aliased constant Wide_String := ""
      & "20003"
      & "";
   Key_85 : aliased constant Wide_String := ""
      & "30003"
      & "";
   Key_86 : aliased constant Wide_String := ""
      & "40003"
      & "";
   Key_87 : aliased constant Wide_String := ""
      & "20004"
      & "";
   Key_88 : aliased constant Wide_String := ""
      & "30004"
      & "";
   Key_89 : aliased constant Wide_String := ""
      & "40004"
      & "";
   Key_90 : aliased constant Wide_String := ""
      & "20005"
      & "";
   Key_91 : aliased constant Wide_String := ""
      & "30005"
      & "";
   Key_92 : aliased constant Wide_String := ""
      & "40005"
      & "";
   Key_93 : aliased constant Wide_String := ""
      & "20006"
      & "";
   Key_94 : aliased constant Wide_String := ""
      & "30006"
      & "";
   Key_95 : aliased constant Wide_String := ""
      & "40006"
      & "";
   Key_96 : aliased constant Wide_String := ""
      & "20007"
      & "";
   Key_97 : aliased constant Wide_String := ""
      & "30007"
      & "";
   Key_98 : aliased constant Wide_String := ""
      & "40007"
      & "";
   Key_99 : aliased constant Wide_String := ""
      & "20008"
      & "";
   Key_100 : aliased constant Wide_String := ""
      & "30008"
      & "";
   Key_101 : aliased constant Wide_String := ""
      & "40008"
      & "";
   Key_102 : aliased constant Wide_String := ""
      & "20009"
      & "";
   Key_103 : aliased constant Wide_String := ""
      & "30009"
      & "";
   Key_104 : aliased constant Wide_String := ""
      & "40009"
      & "";
   Key_105 : aliased constant Wide_String := ""
      & "20010"
      & "";
   Key_106 : aliased constant Wide_String := ""
      & "30010"
      & "";
   Key_107 : aliased constant Wide_String := ""
      & "40010"
      & "";
   Key_108 : aliased constant Wide_String := ""
      & "20011"
      & "";
   Key_109 : aliased constant Wide_String := ""
      & "30011"
      & "";
   Key_110 : aliased constant Wide_String := ""
      & "40011"
      & "";
   Key_111 : aliased constant Wide_String := ""
      & "20012"
      & "";
   Key_112 : aliased constant Wide_String := ""
      & "30012"
      & "";
   Key_113 : aliased constant Wide_String := ""
      & "40012"
      & "";
   Key_114 : aliased constant Wide_String := ""
      & "20013"
      & "";
   Key_115 : aliased constant Wide_String := ""
      & "30013"
      & "";
   Key_116 : aliased constant Wide_String := ""
      & "40013"
      & "";
   Key_117 : aliased constant Wide_String := ""
      & "20014"
      & "";
   Key_118 : aliased constant Wide_String := ""
      & "30014"
      & "";
   Key_119 : aliased constant Wide_String := ""
      & "40014"
      & "";
   Key_120 : aliased constant Wide_String := ""
      & "20015"
      & "";
   Key_121 : aliased constant Wide_String := ""
      & "30015"
      & "";
   Key_122 : aliased constant Wide_String := ""
      & "40015"
      & "";
   Key_123 : aliased constant Wide_String := ""
      & "20016"
      & "";
   Key_124 : aliased constant Wide_String := ""
      & "30016"
      & "";
   Key_125 : aliased constant Wide_String := ""
      & "40016"
      & "";
   Key_126 : aliased constant Wide_String := ""
      & "20017"
      & "";
   Key_127 : aliased constant Wide_String := ""
      & "30017"
      & "";
   Key_128 : aliased constant Wide_String := ""
      & "40017"
      & "";
   Key_129 : aliased constant Wide_String := ""
      & "20018"
      & "";
   Key_130 : aliased constant Wide_String := ""
      & "30018"
      & "";
   Key_131 : aliased constant Wide_String := ""
      & "40018"
      & "";
   Key_132 : aliased constant Wide_String := ""
      & "20019"
      & "";
   Key_133 : aliased constant Wide_String := ""
      & "30019"
      & "";
   Key_134 : aliased constant Wide_String := ""
      & "40019"
      & "";
   Key_135 : aliased constant Wide_String := ""
      & "20020"
      & "";
   Key_136 : aliased constant Wide_String := ""
      & "30020"
      & "";
   Key_137 : aliased constant Wide_String := ""
      & "40020"
      & "";
   Key_138 : aliased constant Wide_String := ""
      & "20021"
      & "";
   Key_139 : aliased constant Wide_String := ""
      & "30021"
      & "";
   Key_140 : aliased constant Wide_String := ""
      & "40021"
      & "";
   Key_141 : aliased constant Wide_String := ""
      & "20022"
      & "";
   Key_142 : aliased constant Wide_String := ""
      & "30022"
      & "";
   Key_143 : aliased constant Wide_String := ""
      & "40022"
      & "";
   Key_144 : aliased constant Wide_String := ""
      & "20023"
      & "";
   Key_145 : aliased constant Wide_String := ""
      & "30023"
      & "";
   Key_146 : aliased constant Wide_String := ""
      & "40023"
      & "";
   Key_147 : aliased constant Wide_String := ""
      & "20024"
      & "";
   Key_148 : aliased constant Wide_String := ""
      & "30024"
      & "";
   Key_149 : aliased constant Wide_String := ""
      & "40024"
      & "";
   Keys : constant ZT.Constant_String_List (1 .. 149) := (
                   1 => Key_1'Access,
                   2 => Key_2'Access,
                   3 => Key_3'Access,
                   4 => Key_4'Access,
                   5 => Key_5'Access,
                   6 => Key_6'Access,
                   7 => Key_7'Access,
                   8 => Key_8'Access,
                   9 => Key_9'Access,
                   10 => Key_10'Access,
                   11 => Key_11'Access,
                   12 => Key_12'Access,
                   13 => Key_13'Access,
                   14 => Key_14'Access,
                   15 => Key_15'Access,
                   16 => Key_16'Access,
                   17 => Key_17'Access,
                   18 => Key_18'Access,
                   19 => Key_19'Access,
                   20 => Key_20'Access,
                   21 => Key_21'Access,
                   22 => Key_22'Access,
                   23 => Key_23'Access,
                   24 => Key_24'Access,
                   25 => Key_25'Access,
                   26 => Key_26'Access,
                   27 => Key_27'Access,
                   28 => Key_28'Access,
                   29 => Key_29'Access,
                   30 => Key_30'Access,
                   31 => Key_31'Access,
                   32 => Key_32'Access,
                   33 => Key_33'Access,
                   34 => Key_34'Access,
                   35 => Key_35'Access,
                   36 => Key_36'Access,
                   37 => Key_37'Access,
                   38 => Key_38'Access,
                   39 => Key_39'Access,
                   40 => Key_40'Access,
                   41 => Key_41'Access,
                   42 => Key_42'Access,
                   43 => Key_43'Access,
                   44 => Key_44'Access,
                   45 => Key_45'Access,
                   46 => Key_46'Access,
                   47 => Key_47'Access,
                   48 => Key_48'Access,
                   49 => Key_49'Access,
                   50 => Key_50'Access,
                   51 => Key_51'Access,
                   52 => Key_52'Access,
                   53 => Key_53'Access,
                   54 => Key_54'Access,
                   55 => Key_55'Access,
                   56 => Key_56'Access,
                   57 => Key_57'Access,
                   58 => Key_58'Access,
                   59 => Key_59'Access,
                   60 => Key_60'Access,
                   61 => Key_61'Access,
                   62 => Key_62'Access,
                   63 => Key_63'Access,
                   64 => Key_64'Access,
                   65 => Key_65'Access,
                   66 => Key_66'Access,
                   67 => Key_67'Access,
                   68 => Key_68'Access,
                   69 => Key_69'Access,
                   70 => Key_70'Access,
                   71 => Key_71'Access,
                   72 => Key_72'Access,
                   73 => Key_73'Access,
                   74 => Key_74'Access,
                   75 => Key_75'Access,
                   76 => Key_76'Access,
                   77 => Key_77'Access,
                   78 => Key_78'Access,
                   79 => Key_79'Access,
                   80 => Key_80'Access,
                   81 => Key_81'Access,
                   82 => Key_82'Access,
                   83 => Key_83'Access,
                   84 => Key_84'Access,
                   85 => Key_85'Access,
                   86 => Key_86'Access,
                   87 => Key_87'Access,
                   88 => Key_88'Access,
                   89 => Key_89'Access,
                   90 => Key_90'Access,
                   91 => Key_91'Access,
                   92 => Key_92'Access,
                   93 => Key_93'Access,
                   94 => Key_94'Access,
                   95 => Key_95'Access,
                   96 => Key_96'Access,
                   97 => Key_97'Access,
                   98 => Key_98'Access,
                   99 => Key_99'Access,
                   100 => Key_100'Access,
                   101 => Key_101'Access,
                   102 => Key_102'Access,
                   103 => Key_103'Access,
                   104 => Key_104'Access,
                   105 => Key_105'Access,
                   106 => Key_106'Access,
                   107 => Key_107'Access,
                   108 => Key_108'Access,
                   109 => Key_109'Access,
                   110 => Key_110'Access,
                   111 => Key_111'Access,
                   112 => Key_112'Access,
                   113 => Key_113'Access,
                   114 => Key_114'Access,
                   115 => Key_115'Access,
                   116 => Key_116'Access,
                   117 => Key_117'Access,
                   118 => Key_118'Access,
                   119 => Key_119'Access,
                   120 => Key_120'Access,
                   121 => Key_121'Access,
                   122 => Key_122'Access,
                   123 => Key_123'Access,
                   124 => Key_124'Access,
                   125 => Key_125'Access,
                   126 => Key_126'Access,
                   127 => Key_127'Access,
                   128 => Key_128'Access,
                   129 => Key_129'Access,
                   130 => Key_130'Access,
                   131 => Key_131'Access,
                   132 => Key_132'Access,
                   133 => Key_133'Access,
                   134 => Key_134'Access,
                   135 => Key_135'Access,
                   136 => Key_136'Access,
                   137 => Key_137'Access,
                   138 => Key_138'Access,
                   139 => Key_139'Access,
                   140 => Key_140'Access,
                   141 => Key_141'Access,
                   142 => Key_142'Access,
                   143 => Key_143'Access,
                   144 => Key_144'Access,
                   145 => Key_145'Access,
                   146 => Key_146'Access,
                   147 => Key_147'Access,
                   148 => Key_148'Access,
                   149 => Key_149'Access);

   Locale_1 : aliased constant Wide_String := ""
      & "";
   Locales : constant ZT.Constant_String_List (1 .. 1) := (
                   1 => Locale_1'Access);

   Pool_Data_1 : aliased constant Wide_String := ""
      & "This is ZBTest, Version {0,*}.{1,*}.{2,*} {3} (r{4}) at {5,"
      & "time} on {5,date}Copyright (c) 2009-{0,*}, Michael Rohan.  "
      & "All rights reservedZBTest completed at {0,time} on {0,date}"
      & ", elapsed time {1}{0}Emtpy list{0}) ""{1}""This is ZBTest, "
      & "a simple application testing application."
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "Available commands:"
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "For additional information on a command, use ""help command"
      & """"
      & Wide_Character'Val (16#000A#)
      & "Creating test area directory ""{0}""zbtest [ -h ] [ -t test"
      & "-area ] [ -X xml-summary ] [ test-script ]Copied the file """
      & "{0}"" to the test areaRenamed the file ""{0}"" to ""{1}""Ex"
      & "ecuting the ZBTest script ""{0}""{0} ({1}) {2}Set the test "
      & "description to ""{0}""Incremented the parmeter ""{0}"" to {"
      & "1}Deleted the file ""{0}""Status for ""{0}"": {1} failures,"
      & " {2} OKCopied the directory ""{0}"" to the test areaDeleted"
      & " the directory ""{0}""Created the directory ""{0}""Generate"
      & "d status report on the file ""{0}"" to ""{1}""Generated sta"
      & "tus report on the file ""{0}"" (non-existent) to ""{1}""The"
      & " file ""{0}"" does not existFile name: ""{0}""File type: {0"
      & "}File size: {0}File date: {0}Executing the command ""{0}""T"
      & "he parameter ""{0}"" is already defined, ignoring condition"
      & "al definitionSetting the parameter ""{0}"" to the value ""{"
      & "1}""Executing the 'undo' action ""{0}""Failure expectedSucc"
      & "ess expectedCommand completed successfullyCommand failedErr"
      & "or, cannot ""end"", currently at level 0Error, too few argu"
      & "ments for the command ""{0}""Error, too many arguments for "
      & "the command ""{0}""Error, invalid value ""{0}""The paramete"
      & "r ""{0}"" is not definedError, the value ""{0}"" is not sup"
      & "ported (only supported value is ""now"")Warning: the enviro"
      & "nment variable ""{0}"" is not definedNOT-USEDError, ""{0}"""
      & " is not a known commandWarning, the file ""{0}"" was not fo"
      & "undWarning, test area ""{0}"", already exists, removing itE"
      & "rror, test area ""{0}"", already exists and is not a direct"
      & "oryError, failed to remove existing test area ""{0}"": {1}E"
      & "rror, failed to create the test area ""{0}"": {1}Error, mis"
      & "sing argument for option ""{0}""Error, unexpected command l"
      & "ine argument ""{0}""Warning, the source ""{0}"" could not b"
      & "e found, failed to copyWarning, failed to rename ""{0}"" to"
      & " ""{1}"": {2}Error, failed to locate the ZBTest script ""{0"
      & "}""Error, the parameter ""{0}"" is not an integer, cannot i"
      & "ncrementError, the log file ""{0}"" was not foundTest ""{0}"
      & """ successfulTest ""{0}"" failedError, regular expression m"
      & "atching failed: {0} ({0,name})Warning, failed to delete ""{"
      & "0}"": {1}Error, failure for test ""{0}"", unexpected except"
      & "ion ""{1,name}""Error, the reference log file ""{0}"" was n"
      & "ot foundError, failed to create the directory ""{0}"": {1}W"
      & "arning, referenced to undefined parameter ""{0}""Error, emp"
      & "ty text function callError, text function call to unknown f"
      & "unction: ""{0}""Error, unexpected exception ({0,name}) enco"
      & "unteredError, failed to rename ""{0}"" to ""{1}"": {2}Error"
      & ", missing arguments for option ""{0}""Error, could not loca"
      & "te the executeable ""{0}""Error, test script, ""{0}"", not "
      & "foundUsage for unknown command, not used.Summary line for a"
      & " commandNot a known command.Usage: append parameter value{0"
      & ":>3}) ""append"", append values to a list parameterThe appe"
      & "nd command adds a value to the end of a list parameter with"
      & "in"
      & Wide_Character'Val (16#000A#)
      & "current scope.Usage: begin{0:>3}) ""begin"", begin a new pa"
      & "rameter scopeStart a new scope level.  Variable assignments"
      & ", e.g.,"
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "    set xyx abc"
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "retain their effect for the lifetime of the scope.  Ending "
      & "the scope"
      & Wide_Character'Val (16#000A#)
      & "using the ""end"" command restores any previous values for "
      & "the parameters"
      & Wide_Character'Val (16#000A#)
      & "adjusted during the scope."
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "It is not normally necessary to explicitly begin a new scop"
      & "e, each test"
      & Wide_Character'Val (16#000A#)
      & "script run automatically starts a new scope which is automa"
      & "tically ended"
      & Wide_Character'Val (16#000A#)
      & "when the test script completes."
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "The ""begin"" command does not have options.Usage: dump [ -"
      & "o output-file ] [ -a ]{0:>3}) ""dump"", dump the contents o"
      & "f the parameter scope(s)Dump parameters values.  The defaul"
      & "t is to dump the parameters"
      & Wide_Character'Val (16#000A#)
      & "for the current scope.  This is primarily a debugging comma"
      & "nd."
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "The options are"
      & Wide_Character'Val (16#000A#)
      & "  -a  Dump the parameters for all scopes"
      & Wide_Character'Val (16#000A#)
      & "  -o  Dump the output to a file in the test areaUsage: end{"
      & "0:>3}) ""end"", end a parameter scope returning to previous"
      & " scopeExit a parameter scope.  Any assignments to made duin"
      & "g the scope"
      & Wide_Character'Val (16#000A#)
      & "are lost.  Previous definitions are restored, e.g.,"
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "    set xyz abc"
      & Wide_Character'Val (16#000A#)
      & "    begin"
      & Wide_Character'Val (16#000A#)
      & "    set xyz 123"
      & Wide_Character'Val (16#000A#)
      & "    echo $xyz"
      & Wide_Character'Val (16#000A#)
      & "    end"
      & Wide_Character'Val (16#000A#)
      & "    echo $xyz"
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "The first ""echo"" prints the value ""123"" which the secon"
      & "d prints the value"
      & Wide_Character'Val (16#000A#)
      & """abc""."
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "It not normally necessary to use the ""begin"" and ""end"" "
      & "commands as running"
      & Wide_Character'Val (16#000A#)
      & "a test script automatically start a new scope which is ende"
      & "d when the script"
      & Wide_Character'Val (16#000A#)
      & "completes.Usage: exit{0:>3}) ""exit"", exit the current tes"
      & "t scriptExit a test script.  This command is normally only "
      & "used when entering"
      & Wide_Character'Val (16#000A#)
      & "commands interactively to exit the zbtest application.  Usi"
      & "ng it in a test"
      & Wide_Character'Val (16#000A#)
      & "script causes immediate exit of the zbtest application.Usag"
      & "e: getenv [ -l | -s | -p | -a ] name [ parameter ]{0:>3}) """
      & "getenv"", define a parameter based on an environment variab"
      & "leDefine an internal parameter (target) based on the value "
      & "of an"
      & Wide_Character'Val (16#000A#)
      & "environment variable."
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "The options are"
      & Wide_Character'Val (16#000A#)
      & "  -l  Define an internal list parameter by splitting on the"
      & " pathsep"
      & Wide_Character'Val (16#000A#)
      & "  -s  Define a simple scalar (string) parameter (default)"
      & Wide_Character'Val (16#000A#)
      & "  -a  If defining a list parameter, append the values"
      & Wide_Character'Val (16#000A#)
      & "  -p  If defining a list parameter, prepend the values"
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "If the target is not given then import to name (lowercased)"
      & ".Usage: help [ command ]{0:>3}) ""help"", print help inform"
      & "ation on commandsGet help information on a command.  Withou"
      & "t a command argument the"
      & Wide_Character'Val (16#000A#)
      & "help command prints a summary of available commands.  With "
      & "an argument"
      & Wide_Character'Val (16#000A#)
      & "the help command print help information on the argument com"
      & "mand.Usage: noop{0:>3}) ""noop"", the no operation commandN"
      & "o operation.  The noop command does nothing.Usage: prepend "
      & "parameter value{0:>3}) ""prepend"", prepend a value to list"
      & " parameterThe prepend command adds a value to the beginning"
      & " of a list parameter."
      & Wide_Character'Val (16#000A#)
      & "If the parameter doesn't exist in the current scope, it is "
      & "created as a list"
      & Wide_Character'Val (16#000A#)
      & "parameter.  The prepend append is normally used to force a "
      & "path to the ""front"
      & Wide_Character'Val (16#000A#)
      & "of a search path parameter, e.g., the ""path"" or ""searchp"
      & "ath"" parameters."
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "Example of use, where the ""begin"" command is used start a"
      & " new, empty, scope"
      & Wide_Character'Val (16#000A#)
      & Wide_Character'Val (16#000A#)
      & "ZBTest> begin"
      & Wide_Character'Val (16#000A#)
      & "ZBTest> print -l l"
      & Wide_Character'Val (16#000A#)
      & "Emtpy list"
      & Wide_Character'Val (16#000A#)
      & "ZBTest> prepend l a"
      & Wide_Character'Val (16#000A#)
      & "ZBTest> print -l l"
      & Wide_Character'Val (16#000A#)
      & "1) ""a"""
      & Wide_Character'Val (16#000A#)
      & "ZBTest> prepend l b"
      & Wide_Character'Val (16#000A#)
      & "ZBTest> print -l l"
      & Wide_Character'Val (16#000A#)
      & "1) ""b"""
      & Wide_Character'Val (16#000A#)
      & "2) ""a""Usage: print [ -l | -s ] parameter [ -l | -s | para"
      & "meter ...{0:>3}) ""print"", print the value of parametersPr"
      & "int the value of a scalar (-s, default) or list (-l) parame"
      & "tersUsage: set [ -s | -i | -b | -f | -t ] parameter value{0"
      & ":>3}) ""set"", set the value of a parameterSet the value of"
      & " a parameter (option selects type: integer, boolean, ...)Us"
      & "age: which [ -e | -f ] file ...{0:>3}) ""which"", print the"
      & " location of a file or commandPrint the locations of filesU"
      & "sage: copy file{0:>3}) ""copy"", copy a file to the test ar"
      & "eaCopy a file to the test area to use as input to commands "
      & "under test.Usage: execute [ -f | -s | -o output ] command ["
      & " command-arg ... ]{0:>3}) ""execute"", execute a system com"
      & "mandExecute a commandUsage: rename old-name new-name{0:>3})"
      & " ""rename"", rename a file in the test areaRename a fileUsa"
      & "ge: run script{0:>3}) ""run"", run another ZBTest scriptRun"
      & " a scriptUsage: desc word ...{0:>3}) ""desc"", set the test"
      & " descriptionUsage: compare log-file [ ref-log-file ]{0:>3})"
      & " ""compare"", compare a log file with a reference logThe co"
      & "mpare command compares (with regular expression matching) a"
      & Wide_Character'Val (16#000A#)
      & "generated log file with a reference log file.  It the files"
      & " match, a"
      & Wide_Character'Val (16#000A#)
      & ".ok file is created and the number of OK tests is increment"
      & "ed, otherwise"
      & Wide_Character'Val (16#000A#)
      & "a .fail file is created and the number of FAIL tests is inc"
      & "remented.Usage: delete name{0:>3}) ""delete"", delete a fil"
      & "e in the test areaDelete a file from the test areaUsage: mk"
      & "dir name{0:>3}) ""mkdir"", create a directoryCreate a new d"
      & "irectory in the test areaUsage: filestat name log-file{0:>3"
      & "}) ""filestat"", write status of a test area file to a log "
      & "fileWrite status of a test area file to a log fileUsage: ec"
      & "ho name ...{0:>3}) ""echo"", echo arguments to outputEcho a"
      & "rguments to outputUsage: setifundef [ -s | -i | -b | -f | -"
      & "t ] parameter value{0:>3}) ""setifundef"", set the value of"
      & " a parameter if it is not definedConditionally set the valu"
      & "e of a parameter to the given value provided"
      & Wide_Character'Val (16#000A#)
      & "the parameter is not already defined.  This can be used to "
      & "allow command line"
      & Wide_Character'Val (16#000A#)
      & "definitions of parameters to over-ride script definitions. "
      & " Or, put another"
      & Wide_Character'Val (16#000A#)
      & "way, allow scripts to provide defaults for parameters not d"
      & "efined on the"
      & Wide_Character'Val (16#000A#)
      & "command line."
      & "";
   Pool : constant ZT.Static_Message_Pool_Type := Pool_Data_1'Access;

   Messages : constant ZTC.ZBMCompile_List (1 .. 149) := (
                 1 => Z'(First => 7503, Last => 7520,
                    Facility_Index => 1, Key_Index => 135,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: delete name
                 2 => Z'(First => 6848, Last => 6890,
                    Facility_Index => 1, Key_Index => 118,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "execute", execute a system command
                 3 => Z'(First => 2576, Last => 2627,
                    Facility_Index => 1, Key_Index => 69,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, text function call to unknown function: "{0}"
                 4 => Z'(First => 458, Last => 495,
                    Facility_Index => 1, Key_Index => 11,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Copied the file "{0}" to the test area
                 5 => Z'(First => 1869, Last => 1908,
                    Facility_Index => 1, Key_Index => 52,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, missing argument for option "{0}"
                 6 => Z'(First => 7069, Last => 7088,
                    Facility_Index => 1, Key_Index => 129,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: desc word ...
                 7 => Z'(First => 6570, Last => 6625,
                    Facility_Index => 1, Key_Index => 112,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "which", print the location of a file or comman⤶
   --  ↦d
                 8 => Z'(First => 2678, Last => 2720,
                    Facility_Index => 1, Key_Index => 71,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, failed to rename "{0}" to "{1}": {2}
                 9 => Z'(First => 199, Last => 208,
                    Facility_Index => 1, Key_Index => 5,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Emtpy list
                 10 => Z'(First => 196, Last => 198,
                    Facility_Index => 1, Key_Index => 54,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0}
                 11 => Z'(First => 573, Last => 596,
                    Facility_Index => 1, Key_Index => 131,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Set the test description
                 12 => Z'(First => 6654, Last => 6669,
                    Facility_Index => 1, Key_Index => 114,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: copy file
                 13 => Z'(First => 1654, Last => 1706,
                    Facility_Index => 1, Key_Index => 48,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Warning, test area "{0}", already exists, removing it
                 14 => Z'(First => 2400, Last => 2448,
                    Facility_Index => 1, Key_Index => 65,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, the reference log file "{0}" was not found
                 15 => Z'(First => 219, Last => 297,
                    Facility_Index => 1, Key_Index => 7,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is ZBTest, a simple application testing applicatio⤶
   --  ↦n.⏎
   --  ↦⏎
   --  ↦Available commands:⏎
                 16 => Z'(First => 6368, Last => 6420,
                    Facility_Index => 1, Key_Index => 108,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: set [ -s | -i | -b | -f | -t ] parameter value
                 17 => Z'(First => 1768, Last => 1820,
                    Facility_Index => 1, Key_Index => 50,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, failed to remove existing test area "{0}": {1}
                 18 => Z'(First => 2497, Last => 2544,
                    Facility_Index => 1, Key_Index => 67,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Warning, referenced to undefined parameter "{0}"
                 19 => Z'(First => 1, Last => 76,
                    Facility_Index => 1, Key_Index => 1,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦This is ZBTest, Version {0,*}.{1,*}.{2,*} {3} (r{4}) at⤶
   --  ↦ {5,time} on {5,date}
                 20 => Z'(First => 7057, Last => 7068,
                    Facility_Index => 1, Key_Index => 125,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Run a script
                 21 => Z'(First => 6464, Last => 6536,
                    Facility_Index => 1, Key_Index => 110,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Set the value of a parameter (option selects type: inte⤶
   --  ↦ger, boolean, ...)
                 22 => Z'(First => 138, Last => 195,
                    Facility_Index => 1, Key_Index => 3,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦ZBTest completed at {0,time} on {0,date}, elapsed time ⤶
   --  ↦{1}
                 23 => Z'(First => 1520, Last => 1573,
                    Facility_Index => 1, Key_Index => 44,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Warning: the environment variable "{0}" is not defined
                 24 => Z'(First => 5678, Last => 6196,
                    Facility_Index => 1, Key_Index => 104,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The prepend command adds a value to the beginning of a ⤶
   --  ↦list parameter.⏎
   --  ↦If the parameter doesn't exist in the current scope, it⤶
   --  ↦ is created as a list⏎
   --  ↦parameter.  The prepend append is normally used to forc⤶
   --  ↦e a path to the "front⏎
   --  ↦of a search path parameter, e.g., the "path" or "search⤶
   --  ↦path" parameters.⏎
   --  ↦⏎
   --  ↦Example of use, where the "begin" command is used start⤶
   --  ↦ a new, empty, scope⏎
   --  ↦⏎
   --  ↦ZBTest> begin⏎
   --  ↦ZBTest> print -l l⏎
   --  ↦Emtpy list⏎
   --  ↦ZBTest> prepend l a⏎
   --  ↦ZBTest> print -l l⏎
   --  ↦1) "a"⏎
   --  ↦ZBTest> prepend l b⏎
   --  ↦ZBTest> print -l l⏎
   --  ↦1) "b"⏎
   --  ↦2) "a"
                 25 => Z'(First => 2228, Last => 2244,
                    Facility_Index => 1, Key_Index => 61,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Test "{0}" failed
                 26 => Z'(First => 1582, Last => 1616,
                    Facility_Index => 1, Key_Index => 46,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, "{0}" is not a known command
                 27 => Z'(First => 6257, Last => 6302,
                    Facility_Index => 1, Key_Index => 106,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "print", print the value of parameters
                 28 => Z'(First => 1342, Last => 1388,
                    Facility_Index => 1, Key_Index => 40,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, too many arguments for the command "{0}"
                 29 => Z'(First => 5511, Last => 5550,
                    Facility_Index => 1, Key_Index => 100,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "noop", the no operation command
                 30 => Z'(First => 1415, Last => 1448,
                    Facility_Index => 1, Key_Index => 42,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The parameter "{0}" is not defined
                 31 => Z'(First => 1211, Last => 1240,
                    Facility_Index => 1, Key_Index => 36,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Command completed successfully
                 32 => Z'(First => 7089, Last => 7128,
                    Facility_Index => 1, Key_Index => 127,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "desc", set the test description
                 33 => Z'(First => 6939, Last => 6986,
                    Facility_Index => 1, Key_Index => 121,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "rename", rename a file in the test area
                 34 => Z'(First => 2302, Last => 2337,
                    Facility_Index => 1, Key_Index => 63,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Warning, failed to delete "{0}": {1}
                 35 => Z'(First => 7000, Last => 7016,
                    Facility_Index => 1, Key_Index => 123,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: run script
                 36 => Z'(First => 2059, Last => 2105,
                    Facility_Index => 1, Key_Index => 57,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, failed to locate the ZBTest script "{0}"
                 37 => Z'(First => 6782, Last => 6847,
                    Facility_Index => 1, Key_Index => 117,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: execute [ -f | -s | -o output ] command [ comman⤶
   --  ↦d-arg ... ]
                 38 => Z'(First => 5596, Last => 5625,
                    Facility_Index => 1, Key_Index => 102,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: prepend parameter value
                 39 => Z'(First => 2168, Last => 2206,
                    Facility_Index => 1, Key_Index => 59,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, the log file "{0}" was not found
                 40 => Z'(First => 6891, Last => 6907,
                    Facility_Index => 1, Key_Index => 119,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Execute a command
                 41 => Z'(First => 1909, Last => 1953,
                    Facility_Index => 1, Key_Index => 53,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, unexpected command line argument "{0}"
                 42 => Z'(First => 5225, Last => 5247,
                    Facility_Index => 1, Key_Index => 96,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: help [ command ]
                 43 => Z'(First => 1255, Last => 1295,
                    Facility_Index => 1, Key_Index => 38,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, cannot "end", currently at level 0
                 44 => Z'(First => 6626, Last => 6653,
                    Facility_Index => 1, Key_Index => 113,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Print the locations of files
                 45 => Z'(First => 1954, Last => 2013,
                    Facility_Index => 1, Key_Index => 55,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Warning, the source "{0}" could not be found, failed to⤶
   --  ↦ copy
                 46 => Z'(First => 4504, Last => 4703,
                    Facility_Index => 1, Key_Index => 92,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Exit a test script.  This command is normally only used⤶
   --  ↦ when entering⏎
   --  ↦commands interactively to exit the zbtest application. ⤶
   --  ↦ Using it in a test⏎
   --  ↦script causes immediate exit of the zbtest application.⤶
                 47 => Z'(First => 5298, Last => 5499,
                    Facility_Index => 1, Key_Index => 98,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Get help information on a command.  Without a command a⤶
   --  ↦rgument the⏎
   --  ↦help command prints a summary of available commands.  W⤶
   --  ↦ith an argument⏎
   --  ↦the help command print help information on the argument⤶
   --  ↦ command.
                 48 => Z'(First => 1146, Last => 1178,
                    Facility_Index => 1, Key_Index => 32,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Executing the 'undo' action "{0}"
                 49 => Z'(First => 6670, Last => 6713,
                    Facility_Index => 1, Key_Index => 115,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "copy", copy a file to the test area
                 50 => Z'(First => 1707, Last => 1767,
                    Facility_Index => 1, Key_Index => 49,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, test area "{0}", already exists and is not a dir⤶
   --  ↦ectory
                 51 => Z'(First => 4758, Last => 4826,
                    Facility_Index => 1, Key_Index => 94,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "getenv", define a parameter based on an enviro⤶
   --  ↦nment variable
                 52 => Z'(First => 988, Last => 1001,
                    Facility_Index => 1, Key_Index => 28,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦File date: {0}
                 53 => Z'(First => 1179, Last => 1194,
                    Facility_Index => 1, Key_Index => 34,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Failure expected
                 54 => Z'(First => 6421, Last => 6463,
                    Facility_Index => 1, Key_Index => 109,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "set", set the value of a parameter
                 55 => Z'(First => 1821, Last => 1868,
                    Facility_Index => 1, Key_Index => 51,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, failed to create the test area "{0}": {1}
                 56 => Z'(First => 3944, Last => 4007,
                    Facility_Index => 1, Key_Index => 88,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "end", end a parameter scope returning to previ⤶
   --  ↦ous scope
                 57 => Z'(First => 1029, Last => 1099,
                    Facility_Index => 1, Key_Index => 30,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The parameter "{0}" is already defined, ignoring condit⤶
   --  ↦ional definition
                 58 => Z'(First => 7977, Last => 8047,
                    Facility_Index => 1, Key_Index => 148,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "setifundef", set the value of a parameter if i⤶
   --  ↦t is not defined
                 59 => Z'(First => 6537, Last => 6569,
                    Facility_Index => 1, Key_Index => 111,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: which [ -e | -f ] file ...
                 60 => Z'(First => 4449, Last => 4459,
                    Facility_Index => 1, Key_Index => 90,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: exit
                 61 => Z'(First => 915, Last => 943,
                    Facility_Index => 1, Key_Index => 24,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The file "{0}" does not exist
                 62 => Z'(First => 1574, Last => 1581,
                    Facility_Index => 1, Key_Index => 45,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦NOT-USED
                 63 => Z'(First => 6197, Last => 6256,
                    Facility_Index => 1, Key_Index => 105,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: print [ -l | -s ] parameter [ -l | -s | paramete⤶
   --  ↦r ...
                 64 => Z'(First => 1617, Last => 1653,
                    Facility_Index => 1, Key_Index => 47,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Warning, the file "{0}" was not found
                 65 => Z'(First => 3606, Last => 3642,
                    Facility_Index => 1, Key_Index => 84,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: dump [ -o output-file ] [ -a ]
                 66 => Z'(First => 960, Last => 973,
                    Facility_Index => 1, Key_Index => 26,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦File type: {0}
                 67 => Z'(First => 7833, Last => 7852,
                    Facility_Index => 1, Key_Index => 144,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: echo name ...
                 68 => Z'(First => 6303, Last => 6367,
                    Facility_Index => 1, Key_Index => 107,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Print the value of a scalar (-s, default) or list (-l) ⤶
   --  ↦parameters
                 69 => Z'(First => 1389, Last => 1414,
                    Facility_Index => 1, Key_Index => 41,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, invalid value "{0}"
                 70 => Z'(First => 3702, Last => 3933,
                    Facility_Index => 1, Key_Index => 86,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Dump parameters values.  The default is to dump the par⤶
   --  ↦ameters⏎
   --  ↦for the current scope.  This is primarily a debugging c⤶
   --  ↦ommand.⏎
   --  ↦⏎
   --  ↦The options are⏎
   --  ↦  -a  Dump the parameters for all scopes⏎
   --  ↦  -o  Dump the output to a file in the test area
                 71 => Z'(First => 746, Last => 772,
                    Facility_Index => 1, Key_Index => 20,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Deleted the directory "{0}"
                 72 => Z'(First => 1449, Last => 1519,
                    Facility_Index => 1, Key_Index => 43,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, the value "{0}" is not supported (only supported⤶
   --  ↦ value is "now")
                 73 => Z'(First => 3005, Last => 3088,
                    Facility_Index => 1, Key_Index => 80,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The append command adds a value to the end of a list pa⤶
   --  ↦rameter within⏎
   --  ↦current scope.
                 74 => Z'(First => 800, Last => 849,
                    Facility_Index => 1, Key_Index => 22,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Generated status report on the file "{0}" to "{1}"
                 75 => Z'(First => 606, Last => 642,
                    Facility_Index => 1, Key_Index => 16,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Incremented the parmeter "{0}" to {1}
                 76 => Z'(First => 7893, Last => 7916,
                    Facility_Index => 1, Key_Index => 146,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Echo arguments to output
                 77 => Z'(First => 5551, Last => 5595,
                    Facility_Index => 1, Key_Index => 101,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦No operation.  The noop command does nothing.
                 78 => Z'(First => 7653, Last => 7691,
                    Facility_Index => 1, Key_Index => 140,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Create a new directory in the test area
                 79 => Z'(First => 5626, Last => 5677,
                    Facility_Index => 1, Key_Index => 103,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "prepend", prepend a value to list parameter
                 80 => Z'(First => 3101, Last => 3144,
                    Facility_Index => 1, Key_Index => 82,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "begin", begin a new parameter scope
                 81 => Z'(First => 1241, Last => 1254,
                    Facility_Index => 1, Key_Index => 37,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Command failed
                 82 => Z'(First => 7721, Last => 7786,
                    Facility_Index => 1, Key_Index => 142,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "filestat", write status of a test area file to⤶
   --  ↦ a log file
                 83 => Z'(First => 1296, Last => 1341,
                    Facility_Index => 1, Key_Index => 39,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, too few arguments for the command "{0}"
                 84 => Z'(First => 2879, Last => 2904,
                    Facility_Index => 1, Key_Index => 76,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Summary line for a command
                 85 => Z'(First => 665, Last => 702,
                    Facility_Index => 1, Key_Index => 18,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Status for "{0}": {1} failures, {2} OK
                 86 => Z'(First => 5248, Last => 5297,
                    Facility_Index => 1, Key_Index => 97,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "help", print help information on commands
                 87 => Z'(First => 7521, Last => 7568,
                    Facility_Index => 1, Key_Index => 136,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "delete", delete a file in the test area
                 88 => Z'(First => 5500, Last => 5510,
                    Facility_Index => 1, Key_Index => 99,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: noop
                 89 => Z'(First => 4704, Last => 4757,
                    Facility_Index => 1, Key_Index => 93,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: getenv [ -l | -s | -p | -a ] name [ parameter ]
                 90 => Z'(First => 196, Last => 198,
                    Facility_Index => 1, Key_Index => 33,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0}
                 91 => Z'(First => 2925, Last => 2953,
                    Facility_Index => 1, Key_Index => 78,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: append parameter value
                 92 => Z'(First => 496, Last => 526,
                    Facility_Index => 1, Key_Index => 12,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Renamed the file "{0}" to "{1}"
                 93 => Z'(First => 7601, Last => 7617,
                    Facility_Index => 1, Key_Index => 138,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: mkdir name
                 94 => Z'(First => 4827, Last => 5224,
                    Facility_Index => 1, Key_Index => 95,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Define an internal parameter (target) based on the valu⤶
   --  ↦e of an⏎
   --  ↦environment variable.⏎
   --  ↦⏎
   --  ↦The options are⏎
   --  ↦  -l  Define an internal list parameter by splitting on⤶
   --  ↦ the pathsep⏎
   --  ↦  -s  Define a simple scalar (string) parameter (defaul⤶
   --  ↦t)⏎
   --  ↦  -a  If defining a list parameter, append the values⏎
   --  ↦  -p  If defining a list parameter, prepend the values⏎⤶
   --  ↦⏎
   --  ↦If the target is not given then import to name (lowerca⤶
   --  ↦sed).
                 95 => Z'(First => 1002, Last => 1028,
                    Facility_Index => 1, Key_Index => 29,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Executing the command "{0}"
                 96 => Z'(First => 1195, Last => 1210,
                    Facility_Index => 1, Key_Index => 35,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Success expected
                 97 => Z'(First => 2721, Last => 2761,
                    Facility_Index => 1, Key_Index => 72,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, missing arguments for option "{0}"
                 98 => Z'(First => 560, Last => 572,
                    Facility_Index => 1, Key_Index => 14,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0} ({1}) {2}
                 99 => Z'(First => 7129, Last => 7168,
                    Facility_Index => 1, Key_Index => 132,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: compare log-file [ ref-log-file ]
                 100 => Z'(First => 4008, Last => 4448,
                    Facility_Index => 1, Key_Index => 89,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Exit a parameter scope.  Any assignments to made duing ⤶
   --  ↦the scope⏎
   --  ↦are lost.  Previous definitions are restored, e.g.,⏎
   --  ↦⏎
   --  ↦    set xyz abc⏎
   --  ↦    begin⏎
   --  ↦    set xyz 123⏎
   --  ↦    echo $xyz⏎
   --  ↦    end⏎
   --  ↦    echo $xyz⏎
   --  ↦⏎
   --  ↦The first "echo" prints the value "123" which the secon⤶
   --  ↦d prints the value⏎
   --  ↦"abc".⏎
   --  ↦⏎
   --  ↦It not normally necessary to use the "begin" and "end" ⤶
   --  ↦commands as running⏎
   --  ↦a test script automatically start a new scope which is ⤶
   --  ↦ended when the script⏎
   --  ↦completes.
                 101 => Z'(First => 1100, Last => 1145,
                    Facility_Index => 1, Key_Index => 31,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Setting the parameter "{0}" to the value "{1}"
                 102 => Z'(First => 2807, Last => 2842,
                    Facility_Index => 1, Key_Index => 74,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, test script, "{0}", not found
                 103 => Z'(First => 298, Last => 358,
                    Facility_Index => 1, Key_Index => 8,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦⏎
   --  ↦For additional information on a command, use "help comm⤶
   --  ↦and"⏎
                 104 => Z'(First => 8048, Last => 8358,
                    Facility_Index => 1, Key_Index => 149,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Conditionally set the value of a parameter to the given⤶
   --  ↦ value provided⏎
   --  ↦the parameter is not already defined.  This can be used⤶
   --  ↦ to allow command line⏎
   --  ↦definitions of parameters to over-ride script definitio⤶
   --  ↦ns.  Or, put another⏎
   --  ↦way, allow scripts to provide defaults for parameters n⤶
   --  ↦ot defined on the⏎
   --  ↦command line.
                 105 => Z'(First => 7227, Last => 7502,
                    Facility_Index => 1, Key_Index => 134,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦The compare command compares (with regular expression m⤶
   --  ↦atching) a⏎
   --  ↦generated log file with a reference log file.  It the f⤶
   --  ↦iles match, a⏎
   --  ↦.ok file is created and the number of OK tests is incre⤶
   --  ↦mented, otherwise⏎
   --  ↦a .fail file is created and the number of FAIL tests is⤶
   --  ↦ incremented.
                 106 => Z'(First => 4460, Last => 4503,
                    Facility_Index => 1, Key_Index => 91,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "exit", exit the current test script
                 107 => Z'(First => 944, Last => 959,
                    Facility_Index => 1, Key_Index => 25,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦File name: "{0}"
                 108 => Z'(First => 2545, Last => 2575,
                    Facility_Index => 1, Key_Index => 68,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, empty text function call
                 109 => Z'(First => 393, Last => 457,
                    Facility_Index => 1, Key_Index => 10,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦zbtest [ -h ] [ -t test-area ] [ -X xml-summary ] [ tes⤶
   --  ↦t-script ]
                 110 => Z'(First => 573, Last => 596,
                    Facility_Index => 1, Key_Index => 128,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Set the test description
                 111 => Z'(First => 2628, Last => 2677,
                    Facility_Index => 1, Key_Index => 70,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, unexpected exception ({0,name}) encountered
                 112 => Z'(First => 196, Last => 198,
                    Facility_Index => 1, Key_Index => 4,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0}
                 113 => Z'(First => 3643, Last => 3701,
                    Facility_Index => 1, Key_Index => 85,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "dump", dump the contents of the parameter scop⤶
   --  ↦e(s)
                 114 => Z'(First => 974, Last => 987,
                    Facility_Index => 1, Key_Index => 27,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦File size: {0}
                 115 => Z'(First => 7853, Last => 7892,
                    Facility_Index => 1, Key_Index => 145,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "echo", echo arguments to output
                 116 => Z'(First => 7089, Last => 7128,
                    Facility_Index => 1, Key_Index => 130,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "desc", set the test description
                 117 => Z'(First => 2338, Last => 2399,
                    Facility_Index => 1, Key_Index => 64,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, failure for test "{0}", unexpected exception "{1⤶
   --  ↦,name}"
                 118 => Z'(First => 209, Last => 218,
                    Facility_Index => 1, Key_Index => 6,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0}) "{1}"
                 119 => Z'(First => 3934, Last => 3943,
                    Facility_Index => 1, Key_Index => 87,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: end
                 120 => Z'(First => 773, Last => 799,
                    Facility_Index => 1, Key_Index => 21,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Created the directory "{0}"
                 121 => Z'(First => 3089, Last => 3100,
                    Facility_Index => 1, Key_Index => 81,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: begin
                 122 => Z'(First => 850, Last => 914,
                    Facility_Index => 1, Key_Index => 23,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Generated status report on the file "{0}" (non-existent⤶
   --  ↦) to "{1}"
                 123 => Z'(First => 2449, Last => 2496,
                    Facility_Index => 1, Key_Index => 66,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, failed to create the directory "{0}": {1}
                 124 => Z'(First => 7017, Last => 7056,
                    Facility_Index => 1, Key_Index => 124,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "run", run another ZBTest script
                 125 => Z'(First => 643, Last => 664,
                    Facility_Index => 1, Key_Index => 17,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Deleted the file "{0}"
                 126 => Z'(First => 77, Last => 137,
                    Facility_Index => 1, Key_Index => 2,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Copyright (c) 2009-{0,*}, Michael Rohan.  All rights re⤶
   --  ↦served
                 127 => Z'(First => 7069, Last => 7088,
                    Facility_Index => 1, Key_Index => 126,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: desc word ...
                 128 => Z'(First => 2207, Last => 2227,
                    Facility_Index => 1, Key_Index => 60,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Test "{0}" successful
                 129 => Z'(First => 2245, Last => 2301,
                    Facility_Index => 1, Key_Index => 62,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, regular expression matching failed: {0} ({0,name⤶
   --  ↦})
                 130 => Z'(First => 7917, Last => 7976,
                    Facility_Index => 1, Key_Index => 147,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: setifundef [ -s | -i | -b | -f | -t ] parameter ⤶
   --  ↦value
                 131 => Z'(First => 7692, Last => 7720,
                    Facility_Index => 1, Key_Index => 141,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: filestat name log-file
                 132 => Z'(First => 3145, Last => 3605,
                    Facility_Index => 1, Key_Index => 83,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Start a new scope level.  Variable assignments, e.g.,⏎
   --  ↦⏎
   --  ↦    set xyx abc⏎
   --  ↦⏎
   --  ↦retain their effect for the lifetime of the scope.  End⤶
   --  ↦ing the scope⏎
   --  ↦using the "end" command restores any previous values fo⤶
   --  ↦r the parameters⏎
   --  ↦adjusted during the scope.⏎
   --  ↦⏎
   --  ↦It is not normally necessary to explicitly begin a new ⤶
   --  ↦scope, each test⏎
   --  ↦script run automatically starts a new scope which is au⤶
   --  ↦tomatically ended⏎
   --  ↦when the test script completes.⏎
   --  ↦⏎
   --  ↦The "begin" command does not have options.
                 133 => Z'(First => 7787, Last => 7832,
                    Facility_Index => 1, Key_Index => 143,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Write status of a test area file to a log file
                 134 => Z'(First => 2905, Last => 2924,
                    Facility_Index => 1, Key_Index => 77,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Not a known command.
                 135 => Z'(First => 703, Last => 745,
                    Facility_Index => 1, Key_Index => 19,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Copied the directory "{0}" to the test area
                 136 => Z'(First => 7569, Last => 7600,
                    Facility_Index => 1, Key_Index => 137,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Delete a file from the test area
                 137 => Z'(First => 6908, Last => 6938,
                    Facility_Index => 1, Key_Index => 120,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage: rename old-name new-name
                 138 => Z'(First => 2954, Last => 3004,
                    Facility_Index => 1, Key_Index => 79,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "append", append values to a list parameter
                 139 => Z'(First => 527, Last => 559,
                    Facility_Index => 1, Key_Index => 13,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Executing the ZBTest script "{0}"
                 140 => Z'(First => 7618, Last => 7652,
                    Facility_Index => 1, Key_Index => 139,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "mkdir", create a directory
                 141 => Z'(First => 6987, Last => 6999,
                    Facility_Index => 1, Key_Index => 122,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Rename a file
                 142 => Z'(First => 2762, Last => 2806,
                    Facility_Index => 1, Key_Index => 73,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Error, could not locate the executeable "{0}"
                 143 => Z'(First => 573, Last => 605,
                    Facility_Index => 1, Key_Index => 15,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Set the test description to "{0}"
                 144 => Z'(First => 2014, Last => 2058,
                    Facility_Index => 1, Key_Index => 56,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Warning, failed to rename "{0}" to "{1}": {2}
                 145 => Z'(First => 7169, Last => 7226,
                    Facility_Index => 1, Key_Index => 133,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦{0:>3}) "compare", compare a log file with a reference ⤶
   --  ↦log
                 146 => Z'(First => 6714, Last => 6781,
                    Facility_Index => 1, Key_Index => 116,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Copy a file to the test area to use as input to command⤶
   --  ↦s under test.
                 147 => Z'(First => 2843, Last => 2878,
                    Facility_Index => 1, Key_Index => 75,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Usage for unknown command, not used.
                 148 => Z'(First => 359, Last => 392,
                    Facility_Index => 1, Key_Index => 9,
                    Locale_Index => 1, Source_Locale_Index => 1),
   --  ↦Creating test area directory "{0}"
                 149 => Z'(First => 2106, Last => 2167,
                    Facility_Index => 1, Key_Index => 58,
                    Locale_Index => 1, Source_Locale_Index => 1));
   --  ↦Error, the parameter "{0}" is not an integer, cannot in⤶
   --  ↦crement

   ---------------
   --- Facility --
   ---------------

   function Facility (Index : in Positive) return Wide_String is
   begin
      return Facilities (Index).all;
   end Facility;

   ---------------------
   --- Facility_Count --
   ---------------------

   function Facility_Count return Natural is
   begin
      return Facilities'Length;
   end Facility_Count;

   ----------------
   -- Initialize --
   ----------------

   procedure Initialize (Catalog : in ZTC.Catalog_Type := Standard_Catalog) is
   begin
      ZTC.Initialize (Catalog, Messages, Pool, Facilities, Keys, Locales,
                      "ZBTest_Messages",
                      Pool_Data_1'Length, 8358);
   end Initialize;

   ----------
   --- Key --
   ----------

   function Key (Index : in Positive) return Wide_String is
   begin
      return Keys (Index).all;
   end Key;

   ----------------
   --- Key_Count --
   ----------------

   function Key_Count return Natural is
   begin
      return Keys'Length;
   end Key_Count;

end ZBTest_Messages;

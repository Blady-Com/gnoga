--  -*- coding: utf-8 -*-
--
--  Ada implementation generated by ZBMCompile, V.* - .*
--  This is a generated file and should not be edited.
--

with ZanyBlue.Text.Formatting;

package body GPS_Text.Aunit_Strings is

   use ZanyBlue.Text.Formatting;

   ------------------
   -- Format_00001 --
   ------------------

   function Format_00001 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (1),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00001;

   ------------------
   -- Format_00002 --
   ------------------

   function Format_00002 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (2),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00002;

   ------------------
   -- Format_00003 --
   ------------------

   function Format_00003 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (3),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00003;

   ------------------
   -- Format_00004 --
   ------------------

   function Format_00004 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (4),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00004;

   ------------------
   -- Format_00005 --
   ------------------

   function Format_00005 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (5),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00005;

   ------------------
   -- Format_00006 --
   ------------------

   function Format_00006 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (6),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00006;

   ------------------
   -- Format_00007 --
   ------------------

   function Format_00007 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (7),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00007;

   ------------------
   -- Format_00008 --
   ------------------

   function Format_00008 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (8),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00008;

   ------------------
   -- Format_00009 --
   ------------------

   function Format_00009 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (9),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00009;

   ------------------
   -- Format_00010 --
   ------------------

   function Format_00010 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (10),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00010;

   ------------------
   -- Format_00011 --
   ------------------

   function Format_00011 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (11),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00011;

   ------------------
   -- Format_00012 --
   ------------------

   function Format_00012 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (12),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00012;

   ------------------
   -- Format_00013 --
   ------------------

   function Format_00013 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (13),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00013;

   ------------------
   -- Format_00014 --
   ------------------

   function Format_00014 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (14),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00014;

   ------------------
   -- Format_00015 --
   ------------------

   function Format_00015 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (15),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00015;

   ------------------
   -- Format_00016 --
   ------------------

   function Format_00016 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (16),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00016;

   ------------------
   -- Format_00017 --
   ------------------

   function Format_00017 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (17),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00017;

   ------------------
   -- Format_00018 --
   ------------------

   function Format_00018 (
      Argument0   : Any_Category_Type'Class;
      Argument1   : Any_Category_Type'Class;
      Argument2   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      Append (Arguments, Argument1);
      Append (Arguments, Argument2);
      return Format (Facility (1), Key (18),
                     Arguments, Locale, Catalog);
   end Format_00018;

   ------------------
   -- Format_00019 --
   ------------------

   function Format_00019 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (19),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00019;

   ------------------
   -- Format_00020 --
   ------------------

   function Format_00020 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (20),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00020;

   ------------------
   -- Format_00021 --
   ------------------

   function Format_00021 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (21),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00021;

   ------------------
   -- Format_00022 --
   ------------------

   function Format_00022 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (22),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00022;

   ------------------
   -- Format_00023 --
   ------------------

   function Format_00023 (
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      return Format (Facility (1), Key (23),
                     Arguments, Locale, Catalog);
   end Format_00023;

   ------------------
   -- Format_00024 --
   ------------------

   function Format_00024 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (24),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00024;

   ------------------
   -- Format_00025 --
   ------------------

   function Format_00025 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (25),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00025;

   ------------------
   -- Format_00026 --
   ------------------

   function Format_00026 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (26),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00026;

   ------------------
   -- Format_00027 --
   ------------------

   function Format_00027 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (27),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00027;

   ------------------
   -- Format_00028 --
   ------------------

   function Format_00028 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (28),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00028;

   ------------------
   -- Format_00029 --
   ------------------

   function Format_00029 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (29),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00029;

   ------------------
   -- Format_00030 --
   ------------------

   function Format_00030 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (30),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00030;

   ------------------
   -- Format_00031 --
   ------------------

   function Format_00031 (
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      return Format (Facility (1), Key (31),
                     Arguments, Locale, Catalog);
   end Format_00031;

   ------------------
   -- Format_00032 --
   ------------------

   function Format_00032 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (32),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00032;

   ------------------
   -- Format_00033 --
   ------------------

   function Format_00033 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (33),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00033;

   ------------------
   -- Format_00034 --
   ------------------

   function Format_00034 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (34),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00034;

   ------------------
   -- Format_00035 --
   ------------------

   function Format_00035 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (35),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00035;

   ------------------
   -- Format_00036 --
   ------------------

   function Format_00036 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (36),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00036;

   ------------------
   -- Format_00037 --
   ------------------

   function Format_00037 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (37),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00037;

   ------------------
   -- Format_00038 --
   ------------------

   function Format_00038 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (38),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00038;

   ------------------
   -- Format_00039 --
   ------------------

   function Format_00039 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (39),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00039;

   ------------------
   -- Format_00040 --
   ------------------

   function Format_00040 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (40),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00040;

   ------------------
   -- Format_00041 --
   ------------------

   function Format_00041 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (41),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00041;

   ------------------
   -- Format_00042 --
   ------------------

   function Format_00042 (
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
   begin
      return Format (Facility (1), Key (42),
                     Empty_Argument_List, Locale, Catalog);
   end Format_00042;

   ------------------
   -- Format_00043 --
   ------------------

   function Format_00043 (
      Argument0   : Any_Category_Type'Class;
      Locale      : Locale_Type  := Current_Locale;
      Catalog     : Catalog_Type := Standard_Catalog) return String
   is
      Arguments : Argument_List;
   begin
      Append (Arguments, Argument0);
      return Format (Facility (1), Key (43),
                     Arguments, Locale, Catalog);
   end Format_00043;

end GPS_Text.Aunit_Strings;
